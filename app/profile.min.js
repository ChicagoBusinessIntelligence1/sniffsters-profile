var AboutCtrl = function () {
    function e(e, t, n, r, i) {
        this.$scope = e, this.FinduserService = t, this.$state = n, this.toastr = r, this.DataService = i, e.home.IsSearchHidden = !1, e.home.IsHome = !1, e.about = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), AdminPanelCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.home.IsSearchHidden = !1, e.adminPanel = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), AdvertiseCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.advertise = this, e.home.IsSearchHidden = !1, e.home.IsHome = !1
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), BreedersCtrl = function () {
    function e(e, t, n, r, i, s, o, u) {
        var a = this;
        this.$scope = e, this.$modal = t, this.$state = s, this.toastr = o, this.DataService = u, e.home.IsSearchHidden = !1, e.home.IsHome = !1, e.modalContactSearch = {title: "New Message", show: !0}, e.sortBy = [
            {name: "Recent Litters", val: "-LittersNumber"},
            {name: "Rating", val: "-rating"}
        ], e.sortFeature = {}, e.breedersCtrl = this, e.searchLocation = null == i.location || "" == i.location ? null : i.location, e.searchBreed = null == i.breed || "" == i.breed ? null : i.breed, e.breeders = [], e.isDataLoading = !0, this.$scope.home.auth.$getCurrentUser().then(function (t) {
            _.isNull(t) && (t = {email: "no"}), a.$scope.home.Breedership(a.$scope.home.FireProcess(t.email)).then(function () {
                var t = e.home.MainUrl + "breeders", i = r(new Firebase(t));
                i.$on("value", function (t) {
                    var r = n("orderByPriority")(t.snapshot.value);
                    r.forEach(function (t) {
                        if (!_.isUndefined(t.profile) && !t.profile.isAdmin) {
                            if (!_.isNull(e.searchLocation) && (_.isUndefined(t.profile) || _.isNull(t.profile.Location) || _.isUndefined(t.profile.Location) || -1 == t.profile.Location.indexOf(e.searchLocation)))return;
                            if (!_.isNull(e.searchBreed) && (_.isUndefined(t.profile.breeds) || -1 == _.values(t.profile.breeds).indexOf(e.searchBreed)))return;
                            if (t.LittersNumber = t.hasOwnProperty("litters") ? _.values(t.litters).length : 0, t.hasOwnProperty("feedbacks")) {
                                var n = 0, r = 0;
                                _.values(t.feedbacks).forEach(function (e) {
                                    e.hasOwnProperty("Evaluation") && e.Evaluation > 0 && (n += e.Evaluation, r++)
                                }), t.rating = r > 0 ? Math.ceil(n / r) : 0
                            } else t.rating = 0;
                            e.breeders.push(t)
                        }
                        e.isDataLoading = !1
                    })
                })
            })
        })
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), BreedsCtrl = function () {
    function e(e, t, n, r, i, s) {
        this.$scope = e, this.$stateParams = n, this.$state = r, this.toastr = i, this.$firebase = s, e.breeds = this, e.newBreed = {}, e.saveBreed = function (t) {
            e.breeds.$add(t)
        }, e.saveLocation = function (t) {
            e.locations.$add(t)
        }, e.remove = function (t) {
            e.breeds.$remove(t)
        }, e.breeds = s(new Firebase(e.home.MainUrl + "breeds")), e.locations = s(new Firebase(e.home.MainUrl + "locations"))
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), ContactCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.contact = this, e.home.IsSearchHidden = !1, e.home.IsHome = !1
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), CreateMessageCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.createMessage = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), DogsCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.dogs = this, e.home.IsSearchHidden = !1, e.home.IsHome = !1
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), ExploreCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.explore = this, e.home.IsSearchHidden = !1, e.home.IsHome = !1
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), FollowersCtrl = function () {
    function e(e, t, n, r, i, s) {
        this.$scope = e, this.settings = t, this.$state = r, this.toastr = i, this.DataService = s, e.followersCtrl = this, e.followers = [], e.noFollowers = t.noFollowers, e.home.auth.$getCurrentUser().then(function (t) {
            e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                var r = e.home.MainUrl;
                r += e.home.isBreeder ? "breeders/" : "lookers/", r += e.home.FireProcess(t.email) + "/followers", e.followersRef = n(new Firebase(r)), e.followersKeys = e.followersRef.$getIndex(), e.followersKeys.forEach(function (t) {
                    var r = _.values(e.followersRef[t])[0], i = r ? "breeders" : "lookers", s = e.home.MainUrl + i + "/" + t, o = n(new Firebase(s));
                    o.$on("value", function (t) {
                        var n = t.snapshot.value;
                        e.followers.push({userName: n.profile.Email, nickName: n.profile.UserName, avatar: n.profile.images ? _.values(n.profile.images.avatar)[0] : null})
                    })
                })
            })
        })
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), FollowingsCtrl = function () {
    function e(e, t, n, r, i, s) {
        this.$scope = e, this.settings = t, this.$state = r, this.toastr = i, this.DataService = s, e.followingsCtrl = this, e.followings = [], e.noFollowing = t.noFollowing, e.home.auth.$getCurrentUser().then(function (t) {
            e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                var r = e.home.MainUrl;
                r += e.home.isBreeder ? "breeders/" : "lookers/", r += e.home.FireProcess(t.email) + "/followings", e.followingsKeys = _.uniq(n(new Firebase(r)).$getIndex()), e.followingsKeys.forEach(function (t) {
                    var r = e.home.MainUrl + "breeders/" + t, i = n(new Firebase(r));
                    i.$on("value", function (t) {
                        var n = t.snapshot.value;
                        e.followings.push({userName: n.profile.Email, nickName: n.profile.UserName, avatar: n.profile.images ? _.values(n.profile.images.avatar)[0] : null})
                    })
                })
            })
        })
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), ForBreedersCtrl = function () {
    function e(e, t, n, r, i, s, o) {
        this.$scope = e, this.$state = n, this.toastr = r, this.DataService = i, e.forBreeders = this, e.home.IsSearchHidden = !1, e.home.IsHome = !1, t.scroll && (s.hash("upgrade"), o())
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), GenerateCtrl = function () {
    function e(e, t, n, r, i) {
        var s = this;
        this.$scope = e, this.$firebase = t, this.$state = n, this.toastr = r, this.DataService = i, e.generate = this;
        var o = new Plan;
        o.name = "Free", o.comment = "First 2 months";
        var u = new Plan;
        u.name = "Monthly", u.price = 19.99;
        var a = new Plan;
        a.name = "Annually", a.price = 225.99, a.discount = 10, e.plans = e.home.MainRefFire.$child("subscriptions").$child("plans"), e.plans.$remove(), e.plans.$add(o), e.plans.$add(u), e.plans.$add(a), e.breeders = t(new Firebase(e.home.MainUrl + "/breeders"));
        var f = this.GenerateBreeders();
        f.forEach(function (t) {
            t.Location = t.City + ", " + t.State, t.UserName = t.Email.split("@")[0], "breeder1" == t.UserName && (t.isAdmin = !0, t.UserName = "Admin");
            var n = t.Email.replace(/\./g, "(p)");
            e.breeders[n] = {profile: t}, e.breeders.$save();
            var r = s.$firebase(new Firebase(e.home.MainUrl + "breeders/" + n)), i = (r.$child("galleries"), r.$child("feedbacks")), o = s.GenerateFeedbacks();
            o.forEach(function (e) {
                i.$add(e), i.$save()
            }), r.$save()
        }), e.breeders.$save(), this.CreateLookers()
    }

    return e.prototype.CreateLookers = function () {
        var e = this;
        this.$scope.generate = this, this.$scope.lookers = this.$firebase(new Firebase(this.$scope.home.MainUrl + "lookers"));
        var t = this.GenerateLookers();
        t.forEach(function (t) {
            t.UserName = t.Email.split("@")[0];
            var n = t.Email.replace(/\./g, "(p)");
            e.$scope.lookers[n] = {profile: t}, e.$scope.lookers.$save();
            var r = e.$firebase(new Firebase(e.$scope.home.MainUrl + "lookers/" + n)), i = r.$child("messages"), s = e.GenerateMessages();
            s.forEach(function (e) {
                i.$add(e)
            }), r.$save()
        }), this.$scope.lookers.$save()
    }, e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e.prototype.GenerateLitters = function () {
        var e = [], t = new Litter;
        t.Title = "My First Litters";
        var n = new Photo;
        n.Caption = "My Dogs.Litter1", n.FilePath = "Picture1.jpg";
        var r = new Photo;
        r.Caption = "My Dogs 2.Litter2", r.FilePath = "Picture2.jpg";
        var i = [];
        return i.push(n), i.push(r), t.Colors = "Black & White", t.DateOfBirth = "03.23.2014", t.Photos = i, e.push(t), e
    }, e.prototype.GenerateFeedbacks = function () {
        var e = [], t = new Feedback;
        t.ClientName = "Dog looker 1", t.FeedbackBody = "The best breeder I ever had. Lovely dogs!";
        var n = new Feedback;
        return n.ClientName = "Dog looker 2", n.FeedbackBody = "Excellent Service. Fast response. Thank you! A++", e.push(t), e.push(n), e
    }, e.prototype.GenerateMessages = function () {
        for (var e = [], t = 1; 5 >= t; t++) {
            var n = new Note;
            n.amISender = Math.random() < .5, n.isTrash = !1, n.userName = "breeder" + t + "@gmail(p)com", n.nickName = "breeder" + t, n.body = "Hello, This is breeder1", n.sent = Date.now(), e.push(n)
        }
        return e
    }, e.prototype.GenerateGalleries = function () {
        var e = [], t = new Gallery;
        t.Title = "Gallery 1";
        var n = new Photo;
        n.Caption = "My Dogs", n.FilePath = "Picture1.jpg";
        var r = new Photo;
        r.Caption = "My Dogs 2", r.FilePath = "Picture2.jpg";
        var i = [];
        return i.push(n), i.push(r), t.Photos = i, e
    }, e.prototype.GenerateBreeders = function () {
        var e = [], t = new BreederProfile;
        t.FirstName = "Jon", t.LastName = "Doe", t.Website = "www.dogs.com", t.Email = "breeder1@gmail.com", t.Phone = "773-123-45-67", t.KennelName = "Dogs Paradise", t.Story = "My Dogs Story", t.Parents = "Great parents", t.Boys = "3 pupies", t.Girls = "2 puppies", t.AddInfo = "Add Info about dogs", t.City = "Chicago", t.Location = "Chicago,IL", t.Zip = "60630", t.State = "IL", t.Certifications = "Certification 1", t.VetServices = !0, t.Insurances = "Insurance 1", t.Shipping = !1, e.push(t);
        var n = new BreederProfile;
        n.FirstName = "Jon", n.LastName = "Doe", n.Website = "www.dogs.com", n.Email = "breeder2@gmail.com", n.Phone = "773-123-45-67", n.KennelName = "Dogs Paradise", n.Story = "My Dogs Story", n.Parents = "Great parents", n.Boys = "3 pupies", n.Girls = "2 puppies", n.AddInfo = "Add Info about dogs", n.City = "Chicago", n.Zip = "60630", n.State = "IL", n.Certifications = "Certification 1", n.VetServices = !0, n.Insurances = "Insurance 1", n.Shipping = !1, e.push(n);
        var r = new BreederProfile;
        r.FirstName = "Jon", r.LastName = "Doe", r.Website = "www.dogs.com", r.Email = "breeder3@gmail.com", r.Phone = "773-123-45-67", r.KennelName = "Dogs Paradise", r.Story = "My Dogs Story", r.Parents = "Great parents", r.Boys = "3 pupies", r.Girls = "2 puppies", r.AddInfo = "Add Info about dogs", r.City = "Chicago", r.Zip = "60630", r.State = "IL", r.Certifications = "Certification 1", r.VetServices = !0, r.Insurances = "Insurance 1", r.Shipping = !1, e.push(r);
        var i = new BreederProfile;
        i.FirstName = "Jon", i.LastName = "Doe", i.Website = "www.dogs.com", i.Email = "breeder4@gmail.com", i.Phone = "773-123-45-67", i.KennelName = "Dogs Paradise", i.Story = "My Dogs Story", i.Parents = "Great parents", i.Boys = "3 pupies", i.Girls = "2 puppies", i.AddInfo = "Add Info about dogs", i.City = "Chicago", i.Zip = "60630", i.State = "IL", i.Certifications = "Certification 1", i.VetServices = !0, i.Insurances = "Insurance 1", i.Shipping = !1, e.push(i);
        var s = new BreederProfile;
        s.FirstName = "Jon", s.LastName = "Doe", s.Website = "www.dogs.com", s.Email = "breeder5@gmail.com", s.Phone = "773-123-45-67", s.KennelName = "Dogs Paradise", s.Story = "My Dogs Story", s.Parents = "Great parents", s.Boys = "3 pupies", s.Girls = "2 puppies", s.AddInfo = "Add Info about dogs", s.City = "Chicago", s.Zip = "60630", s.State = "IL", s.Certifications = "Certification 1", s.VetServices = !0, s.Insurances = "Insurance 1", s.Shipping = !1, e.push(s);
        var o = new BreederProfile;
        o.FirstName = "Jon", o.LastName = "Doe", o.Website = "www.dogs.com", o.Email = "breeder6@gmail.com", o.Phone = "773-123-45-67", o.KennelName = "Dogs Paradise", o.Story = "My Dogs Story", o.Parents = "Great parents", o.Boys = "3 pupies", o.Girls = "2 puppies", o.AddInfo = "Add Info about dogs", o.City = "Chicago", o.Zip = "60630", o.State = "IL", o.Certifications = "Certification 1", o.VetServices = !0, o.Insurances = "Insurance 1", o.Shipping = !1, e.push(o);
        var u = new BreederProfile;
        u.FirstName = "Jon", u.LastName = "Doe", u.Website = "www.dogs.com", u.Email = "breeder7@gmail.com", u.Phone = "773-123-45-67", u.KennelName = "Dogs Paradise", u.Story = "My Dogs Story", u.Parents = "Great parents", u.Boys = "3 pupies", u.Girls = "2 puppies", u.AddInfo = "Add Info about dogs", u.City = "Chicago", u.Zip = "60630", u.State = "IL", u.Certifications = "Certification 1", u.VetServices = !0, u.Insurances = "Insurance 1", u.Shipping = !1, e.push(u);
        var a = new BreederProfile;
        a.FirstName = "Jon", a.LastName = "Doe", a.Website = "www.dogs.com", a.Email = "breeder8@gmail.com", a.Phone = "773-123-45-67", a.KennelName = "Dogs Paradise", a.Story = "My Dogs Story", a.Parents = "Great parents", a.Boys = "3 pupies", a.Girls = "2 puppies", a.AddInfo = "Add Info about dogs", a.City = "Chicago", a.Zip = "60630", a.State = "IL", a.Certifications = "Certification 1", a.VetServices = !0, a.Insurances = "Insurance 1", a.Shipping = !1, e.push(a);
        var f = new BreederProfile;
        return f.FirstName = "Jon", f.LastName = "Doe", f.Website = "www.dogs.com", f.Email = "breeder9@gmail.com", f.Phone = "773-123-45-67", f.KennelName = "Dogs Paradise", f.Story = "My Dogs Story", f.Parents = "Great parents", f.Boys = "3 pupies", f.Girls = "2 puppies", f.AddInfo = "Add Info about dogs", f.City = "Chicago", f.Zip = "60630", f.State = "IL", f.Certifications = "Certification 1", f.VetServices = !0, f.Insurances = "Insurance 1", f.Shipping = !1, e.push(f), e
    }, e.prototype.GenerateLookers = function () {
        var e = [], t = new LookerProfile;
        t.FirstName = "Jon", t.LastName = "Doe", t.Email = "looker1@gmail.com", t.Phone = "773-123-45-67", t.City = "Chicago", t.Zip = "60630", t.State = "IL", e.push(t);
        var n = new LookerProfile;
        n.FirstName = "Jon", n.LastName = "Doe", n.Email = "looker2@gmail.com", n.Phone = "773-123-45-67", n.City = "Chicago", n.Zip = "60630", n.State = "IL", e.push(n);
        var r = new LookerProfile;
        r.FirstName = "Jon", r.LastName = "Doe", r.Email = "looker3@gmail.com", r.Phone = "773-123-45-67", r.City = "Chicago", r.Zip = "60630", r.State = "IL", e.push(r);
        var i = new LookerProfile;
        i.FirstName = "Jon", i.LastName = "Doe", i.Email = "looker4@gmail.com", i.Phone = "773-123-45-67", i.City = "Chicago", i.Zip = "60630", i.State = "IL", e.push(i);
        var s = new LookerProfile;
        s.FirstName = "Jon", s.LastName = "Doe", s.Email = "looker5@gmail.com", s.Phone = "773-123-45-67", s.City = "Chicago", s.Zip = "60630", s.State = "IL", e.push(s);
        var o = new LookerProfile;
        o.FirstName = "Jon", o.LastName = "Doe", o.Email = "looker6@gmail.com", o.Phone = "773-123-45-67", o.City = "Chicago", o.Zip = "60630", o.State = "IL", e.push(o);
        var u = new LookerProfile;
        u.FirstName = "Jon", u.LastName = "Doe", u.Email = "looker7@gmail.com", u.Phone = "773-123-45-67", u.City = "Chicago", u.Zip = "60630", u.State = "IL", e.push(u);
        var a = new LookerProfile;
        a.FirstName = "Jon", a.LastName = "Doe", a.Email = "looker8@gmail.com", a.Phone = "773-123-45-67", a.City = "Chicago", a.Zip = "60630", a.State = "IL", e.push(a);
        var f = new LookerProfile;
        f.FirstName = "Jon", f.LastName = "Doe", f.Email = "looker9@gmail.com", f.Phone = "773-123-45-67", f.City = "Chicago", f.Zip = "60630", f.State = "IL", e.push(f);
        var l = new LookerProfile;
        return l.FirstName = "Jon", l.LastName = "Doe", l.Email = "looker10@gmail.com", l.Phone = "773-123-45-67", l.City = "Chicago", l.Zip = "60630", l.State = "IL", e.push(l), e
    }, e
}(), HomeCtrl = function () {
    function e(e, t, n, r, i, s, o, u, a, f, l, c, h, p) {
        var d = this;
        this.$rootScope = e, this.$popover = t, this.$scope = n, this.$modal = r, this.FinduserService = i, this.settings = s, this.$filter = o, this.$stateParams = u, this.$q = a, this.$firebase = f, this.$firebaseSimpleLogin = l, this.$state = c, this.toastr = h, this.DataService = p, this.isLoggedIn = !1, n.lpShown = !0, n.rpShown = !0, n.registerPopover = function () {
            n.rpShown = !0, n.lpShown = !1
        }, n.loginPopover = function () {
            n.lpShown = !0, n.rpShown = !1
        }, this.Followings = [], n.searchLocation = {}, n.searchBreed = {}, n.username = {}, n.userExists = !1, e.$on("$stateChangeSuccess", function (e, t) {
            this.url2 = t.name
        }), n.home = this, n.usernameFb = {}, n.isBreederFb = {}, n.setUsernameFb = function (e, t) {
            i.find(e).then(function () {
                n.userExists = !0, d.ShowError(s.userExists)
            }, function () {
                if (t) {
                    var r = new BreederGenerator;
                    r.create(n.home.FireProcess(n.facebookUid), d.MainUrl, d.$firebase, e)
                } else {
                    var i = new LookerGenerator;
                    i.create(n.home.FireProcess(n.facebookUid), d.MainUrl, d.$firebase, e)
                }
                d.Breedership(d.FireProcess(e)), d.nickName = e, d.nickNameFire = d.FireProcess(e), d.userName = d.$scope.facebookUid, d.userNameFire = d.FireProcess(d.$scope.facebookUid), d.isLoggedIn = !0, d.isBreeder = t, d.$scope.modal.hide(), t && d.$state.go("user.profile.about1", {uname: d.userName}), t || d.$state.go("looker.account", {uname: d.userName}), d.$scope.modal.hide()
            })
        }, n.register = function (e, t, o, u) {
            return t.length < 5 ? void d.ShowError("Password should be not less than 5 symbols") : t !== o ? void d.ShowError("Passwords do not match") : void i.findByEmail(e).then(function () {
                n.userExists = !0, d.ShowError(s.userExists)
            }, function () {
                n.emailReg = e, n.passwordReg = t, n.isNewBreederReg = u, n.username.val = e.split("@")[0], n.modalUser = r({scope: n, title: "Choose your username", template: "../views/modals/choose-username.html", show: !0})
            })
        }, n.setUsername = function (e) {
            i.find(e).then(function () {
                n.userExists = !0, d.ShowError(s.userExists)
            }, function () {
                n.home.auth.$createUser(n.emailReg, n.passwordReg).then(function () {
                    if (n.isNewBreederReg) {
                        var t = new BreederGenerator;
                        t.create(n.home.FireProcess(n.emailReg), n.home.MainUrl, d.$firebase, e)
                    } else {
                        var r = new LookerGenerator;
                        r.create(n.home.FireProcess(n.emailReg), n.home.MainUrl, d.$firebase, e)
                    }
                    n.home.Signin(n.emailReg, n.passwordReg)
                }, function (e) {
                    d.ShowError(e)
                }), n.modalUser.hide()
            })
        }, n.fetchDog = function () {
            if (!_.isUndefined(n.searchLocation.val) && n.searchLocation.val.length > 2) {
                var e = _.where(n.states, {name: n.searchLocation.val})[0];
                n.searchLocation.val = e
            }
            c.go("sniff.breeders", {breed: n.searchBreed.val, location: n.searchLocation.val})
        }, this.MainUrl = s.mainUrl, this.MainRef = new Firebase(this.MainUrl), this.MainRefFire = f(new Firebase(this.MainUrl));
        var v = f(new Firebase(this.MainUrl + "breeds"));
        v.$on("value", function (e) {
            var t = e.snapshot.value;
            n.breeds = o("orderByPriority")(t)
        }), n.states = [
            {name: "ALABAMA", abbreviation: "AL"},
            {name: "ALASKA", abbreviation: "AK"},
            {name: "AMERICAN SAMOA", abbreviation: "AS"},
            {name: "ARIZONA", abbreviation: "AZ"},
            {name: "ARKANSAS", abbreviation: "AR"},
            {name: "CALIFORNIA", abbreviation: "CA"},
            {name: "COLORADO", abbreviation: "CO"},
            {name: "CONNECTICUT", abbreviation: "CT"},
            {name: "DELAWARE", abbreviation: "DE"},
            {name: "DISTRICT OF COLUMBIA", abbreviation: "DC"},
            {name: "FEDERATED STATES OF MICRONESIA", abbreviation: "FM"},
            {name: "FLORIDA", abbreviation: "FL"},
            {name: "GEORGIA", abbreviation: "GA"},
            {name: "GUAM", abbreviation: "GU"},
            {name: "HAWAII", abbreviation: "HI"},
            {name: "IDAHO", abbreviation: "ID"},
            {name: "ILLINOIS", abbreviation: "IL"},
            {name: "INDIANA", abbreviation: "IN"},
            {name: "IOWA", abbreviation: "IA"},
            {name: "KANSAS", abbreviation: "KS"},
            {name: "KENTUCKY", abbreviation: "KY"},
            {name: "LOUISIANA", abbreviation: "LA"},
            {name: "MAINE", abbreviation: "ME"},
            {name: "MARSHALL ISLANDS", abbreviation: "MH"},
            {name: "MARYLAND", abbreviation: "MD"},
            {name: "MASSACHUSETTS", abbreviation: "MA"},
            {name: "MICHIGAN", abbreviation: "MI"},
            {name: "MINNESOTA", abbreviation: "MN"},
            {name: "MISSISSIPPI", abbreviation: "MS"},
            {name: "MISSOURI", abbreviation: "MO"},
            {name: "MONTANA", abbreviation: "MT"},
            {name: "NEBRASKA", abbreviation: "NE"},
            {name: "NEVADA", abbreviation: "NV"},
            {name: "NEW HAMPSHIRE", abbreviation: "NH"},
            {name: "NEW JERSEY", abbreviation: "NJ"},
            {name: "NEW MEXICO", abbreviation: "NM"},
            {name: "NEW YORK", abbreviation: "NY"},
            {name: "NORTH CAROLINA", abbreviation: "NC"},
            {name: "NORTH DAKOTA", abbreviation: "ND"},
            {name: "NORTHERN MARIANA ISLANDS", abbreviation: "MP"},
            {name: "OHIO", abbreviation: "OH"},
            {name: "OKLAHOMA", abbreviation: "OK"},
            {name: "OREGON", abbreviation: "OR"},
            {name: "PALAU", abbreviation: "PW"},
            {name: "PENNSYLVANIA", abbreviation: "PA"},
            {name: "PUERTO RICO", abbreviation: "PR"},
            {name: "RHODE ISLAND", abbreviation: "RI"},
            {name: "SOUTH CAROLINA", abbreviation: "SC"},
            {name: "SOUTH DAKOTA", abbreviation: "SD"},
            {name: "TENNESSEE", abbreviation: "TN"},
            {name: "TEXAS", abbreviation: "TX"},
            {name: "UTAH", abbreviation: "UT"},
            {name: "VERMONT", abbreviation: "VT"},
            {name: "VIRGIN ISLANDS", abbreviation: "VI"},
            {name: "VIRGINIA", abbreviation: "VA"},
            {name: "WASHINGTON", abbreviation: "WA"},
            {name: "WEST VIRGINIA", abbreviation: "WV"},
            {name: "WISCONSIN", abbreviation: "WI"},
            {name: "WYOMING", abbreviation: "WY"}
        ], this.auth = this.$firebaseSimpleLogin(this.MainRef), this.auth.$getCurrentUser().then(function (e) {
            d.isLoggedIn = !0, null !== e && (_.isUndefined(e.email) && (e.email = e.id), d.Breedership(d.FireProcess(e.email)).then(function () {
                d.userName = e.email, d.isLoggedIn = !0, d.userNameFire = d.FireProcess(d.userName)
            }))
        })
    }

    return e.prototype.FacebookSignin = function () {
        var e = this;
        this.auth.$login("facebook", {rememberMe: !1}).then(function (t) {
            t ? (e.$scope.facebookUid = t.id, e.FinduserService.findByEmail(t.id).then(function (t) {
                e.nickName = t.UserName, e.nickNameFire = e.FireProcess(e.nickName), e.userName = t.Email, e.userNameFire = e.FireProcess(e.userName), e.isLoggedIn = !0, e.isBreeder = t.isBreeder, 1 == e.isBreeder && e.$state.go("user.profile.about1", {uname: t.Email}), 0 == e.isBreeder && e.$state.go("looker.account", {uname: t.Email})
            }, function () {
                e.$scope.modal = e.$modal({scope: e.$scope, title: "Choose username", template: "../views/modals/choose-username-facebook.html", show: !0})
            })) : (e.isLoggedIn = !1, e.auth.user = null)
        }, function (t) {
            e.ShowError(t)
        })
    }, e.prototype.Signin = function (e, t) {
        var n = this;
        this.auth = this.$firebaseSimpleLogin(this.MainRef), this.auth.$login("password", {email: e, password: t}).then(function (e) {
            _.isUndefined(n.$scope.modalLogin) || n.$scope.modalLogin.hide(), n.Breedership(n.FireProcess(e.email)).then(function () {
                n.userName = e.email, n.isLoggedIn = !0, n.userNameFire = n.FireProcess(n.userName), n.isLoggedIn = !0, n.isBreeder === !0 && n.$state.go("user.profile.about1", {uname: e.email}, {reload: !0}), n.isBreeder === !1 && n.$state.go("looker.account", {uname: e.email}, {reload: !0})
            })
        }, function () {
            n.ShowError("Your login or password was entered incorrectly."), n.$scope.incorrectCredentials = !0
        })
    }, e.prototype.Breedership = function (e) {
        var t = this, n = this.$q.defer();
        "no" == e && n.resolve();
        var r = this.MainUrl + "breeders/" + e, i = this.MainUrl + "lookers/" + e, s = this.$firebase(new Firebase(r)), o = this.$firebase(new Firebase(i));
        return s.$on("value", function (e) {
            var r = e.snapshot.value;
            if (!_.isNull(r) && !_.isUndefined(r.profile)) {
                r.hasOwnProperty("followings") && (t.Followings = _.map(_.keys(r.followings), function (e) {
                    return t.FireUnProcess(e)
                })), t.nickName = r.profile.UserName, t.nickNameFire = t.FireProcess(t.nickName), t.isBreeder = !0, t.isAdmin = r.profile.isAdmin;
                var i = t.MainUrl + "breeders/" + t.FireProcess(r.profile.Email) + "/subscriptions", s = t.$firebase(new Firebase(i));
                s.$on("value", function (e) {
                    var n = e.snapshot.value;
                    t.subscription = t.$filter("orderByPriority")(n)[0]
                }), n.resolve()
            }
        }), o.$on("value", function (e) {
            var r = e.snapshot.value;
            _.isNull(r) || _.isUndefined(r.profile) || (t.nickName = r.profile.UserName, t.nickNameFire = t.FireProcess(t.nickName), t.isBreeder = !1, r.hasOwnProperty("followings") && (t.Followings = _.map(_.keys(r.followings), function (e) {
                return t.FireUnProcess(e)
            })), n.resolve())
        }), n.promise
    }, e.prototype.followUser = function (e, t) {
        var n = this;
        this.DataService.followUser(e, t, this.$scope.home.isBreeder).then(function () {
            n.$scope.home.AddToFollowings(t)
        })
    }, e.prototype.unFollowUser = function (e, t) {
        var n = this;
        this.DataService.unFollowUser(e, t, this.$scope.home.isBreeder).then(function () {
            n.$scope.home.RemoveFromFollowings(t)
        })
    }, e.prototype.AddToFollowings = function (e) {
        this.Followings.push(this.FireUnProcess(e))
    }, e.prototype.RemoveFromFollowings = function (e) {
        var t = this.Followings.indexOf(this.FireUnProcess(e));
        this.Followings.splice(t, 1)
    }, e.prototype.FireProcess = function (e) {
        return _.isUndefined(e) ? void 0 : e.replace(/\./g, "(p)")
    }, e.prototype.FireUnProcess = function (e) {
        return _.isUndefined(e) ? void 0 : e.replace(/\(p\)/g, ".")
    }, e.prototype.animationDirection = function (e) {
        return e > this.menuIndex ? "slide-left" : "slide-right"
    }, e.prototype.Logout = function () {
        this.auth.$logout(), this.isLoggedIn = !1, this.auth.user = null, this.userName = null, this.userNameFire = null, this.isOwner = null, this.isAdmin = null, this.nickName = null, this.nickNameFire = null, this.$state.go("home", {}, {reload: !0})
    }, e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e.prototype.Ownership = function (e) {
        if (1 == e)return this.isOwner = !1, !1;
        var t = this.$stateParams.uname;
        return null === this.auth.user ? !1 : (this.isOwner = t === this.auth.user.email || t === this.auth.user.id, this.isOwner)
    }, e.prototype.navigate = function (e) {
        this.$scope.slide = this.animationDirection(e), 1 == e && (this.menuIndex = 1, this.$state.go("user.profile.about1")), 2 == e && (this.menuIndex = 2, this.$state.go("user.profile.photos2")), 3 == e && (this.url = "puppies", this.menuIndex = 3, this.$state.go("user.profile.puppies3")), 4 == e && (this.url = "details", this.menuIndex = 4, this.$state.go("user.profile.details4")), 5 == e && (this.url = "testimonials", this.menuIndex = 5, this.$state.go("user.profile.testimonials5"))
    }, e
}(), IndexCtrl = function () {
    function e(e, t, n, r, i, s, o, u, a, f, l) {
        var c = this;
        this.$scope = e, this.$firebase = t, this.$filter = n, this.settings = r, this.$rootScope = o, this.$window = u, this.toastr = a, this.DataService = f, this.CopyProfileService = l, e.index = this, e.home.IsSearchHidden = !1, e.home.url = "about", e.home.hideMenu = !1, e.slide = "", this.spinner = !0;
        var h, p = s.uname, d = e.home.FireProcess(p), v = t(new Firebase(e.home.MainUrl + "breeders/" + d + "/profile"));
        v.$on("value", function (t) {
            h = t.snapshot.value, c.BreederProfile = h, c.error = !1, c.BreederProfile = h, c.CopyProfileService.SetProfile(h), c.BreederProfileEdit = l.GetProfileClone(), c.spinner = !1, e.home.isLoadFinished = !0
        }), this.$scope.home.auth.$getCurrentUser().then(function (r) {
            if (!_.isNull(r)) {
                _.isUndefined(r.email) && (r.email = r.id), c.spinner = !1;
                var i;
                _.isUndefined(s.asuser) || "/as-user" != s.asuser || (i = !0);
                var o = e.home.Ownership(i);
                if (o) {
                    c.subscription = e.home.subscription;
                    var u = e.home.MainUrl + "breeders/" + e.home.FireProcess(r.email) + "/messages", a = t(new Firebase(u)), f = e.home.MainUrl + "breeders/" + e.home.FireProcess(r.email) + "/galleries", l = t(new Firebase(f));
                    l.$on("value", function (e) {
                        c.galleriesNumber = _.values(e.snapshot.value).length
                    });
                    var h = e.home.MainUrl + "breeders/" + e.home.FireProcess(r.email) + "/litters", d = t(new Firebase(h));
                    d.$on("value", function (e) {
                        c.littersNumber = _.values(e.snapshot.value).length
                    }), a.$on("value", function (e) {
                        var t = e.snapshot.value, r = n("orderByPriority")(t);
                        c.messagesNumber = r.length;
                        var i = _.where(r, {isUnread: !0});
                        c.unReadMessagesNumber = i.length
                    })
                }
                var v = e.home.MainUrl + "breeders/" + c.$scope.home.FireProcess(p) + "/feedbacks", m = t(new Firebase(v)), g = m.$getIndex(), y = 0, b = 0;
                g.forEach(function (e) {
                    var t = m[e];
                    t.hasOwnProperty("Evaluation") && t.Evaluation > 0 && (y += t.Evaluation, b++)
                }), c.rating = b > 0 ? Math.ceil(y / b) : 0
            }
        })
    }

    return e.prototype.GetBreederName = function () {
        return this.BreederProfile
    }, e.prototype.SaveKennelName = function () {
        var e = this.CopyProfileService.GetProfileClone();
        e.KennelName = this.BreederProfileEdit.KennelName, e.Story = this.BreederProfileEdit.Story, this.Save(e)
    }, e.prototype.SavePersonalInfo = function () {
        var e = this.CopyProfileService.GetProfileClone();
        e.KennelName = this.BreederProfileEdit.KennelName, e.Website = this.BreederProfileEdit.Website, e.Email = this.BreederProfileEdit.Email, e.Phone = this.BreederProfileEdit.Phone, this.Save(e)
    }, e.prototype.SaveLocation = function () {
        var e = this.CopyProfileService.GetProfileClone();
        e.City = this.BreederProfileEdit.City, e.Zip = this.BreederProfileEdit.Zip, e.State = this.BreederProfileEdit.State, this.Save(e)
    }, e.prototype.SaveSpecifics = function () {
        var e = this.CopyProfileService.GetProfileClone();
        e.Certifications = this.BreederProfileEdit.Certifications, e.Insurances = this.BreederProfileEdit.Insurances, this.Save(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e.prototype.ShowSuccess = function (e) {
        this.toastr.success(e)
    }, e.prototype.Clone = function () {
        this.BreederProfileCopy = this.CopyProfileService.GetProfileClone()
    }, e.prototype.GetClone = function () {
        return this.CopyProfileService.GetProfileClone()
    }, e.prototype.UpdateBreederProfile = function (e) {
        this.BreederProfile = e
    }, e.prototype.Save = function (e) {
        var t = this;
        e.Location = "" != e.City && "" != e.State ? e.City + ", " + e.State : "", this.DataService.updateProfile(e).then(function () {
            t.CopyProfileService.SetProfile(e), t.UpdateBreederProfile(e), t.ShowSuccess(t.settings.dataSaved)
        }, function () {
            t.ShowError(t.settings.dbError)
        })
    }, e
}(), LitterInfoCtrl = function () {
    function e(e, t, n, r, i, s, o) {
        this.$scope = e, this.$modal = t, this.$stateParams = n, this.$firebase = r, this.$state = i, this.toastr = s, this.DataService = o, e.litterInfo = this, e.files = [];
        var u = n.id;
        e.home.auth.$getCurrentUser().then(function (t) {
            e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                var n = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.email) + "/litters/" + u;
                e.l = r(new Firebase(n))
            })
        }), e.saveLitter = function () {
            var t = e.l.$child("Photos");
            e.files.forEach(function (e) {
                t.$add(e)
            }), e.l.$save().then(function () {
                i.go("^")
            })
        }
    }

    return e.prototype.deleteLitter = function () {
        var e = this, t = this.$modal.open({template: '<div><div class="modal-body">Delete this Litter?</div><div class="modal-footer"><button class="btn btn-primary" ng-click="ok()">OK</button><button class="btn btn-warning" ng-click="cancel()">Cancel</button></div></div>', size: "sm", controller: function (e, t) {
            e.ok = function () {
                t.close(!0)
            }, e.cancel = function () {
                t.close(!1)
            }
        }});
        t.result.then(function (t) {
            t && (e.$scope.litter.$remove(), e.$state.go("^"))
        })
    }, e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), LoginCtrl = function () {
    function e(e, t, n, r, i, s) {
        this.$scope = e, this.$firebase = t, this.$firebaseSimpleLogin = n, this.$state = r, this.toastr = i, this.DataService = s, e.login = this, e.home.IsSearchHidden = !1, this.email = "", this.pass = "123456"
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), LookerAccountCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.lookerAccount = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), LookerAccountEditCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.lookerAccountEdit = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), LookerCtrl = function () {
    function e(e, t, n, r, i, s) {
        var o = this;
        this.$scope = e, this.$firebase = t, this.$stateParams = n, this.$state = r, this.toastr = i, this.DataService = s, this.ResetAllFields = function () {
            o.$scope.looker = ""
        }, e.home.IsSearchHidden = !1, e.lookerCtrl = this;
        var u = this.$stateParams.uname, a = e.home.MainUrl + "lookers/" + e.home.FireProcess(u);
        e.looker = t(new Firebase(a)), e.save = function () {
            e.looker.$save()
        }
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), LookerProfileCtrl = function () {
    function e(e, t, n, r, i, s) {
        this.$scope = e, this.$firebase = t, this.$stateParams = n, this.$state = r, this.toastr = i, this.DataService = s, e.lprofile = this, this.lookersUrl = "https://torid-fire-6526.firebaseio.com/lookers/";
        var o = this.$stateParams.uname, u = this.lookersUrl + e.home.FireProcess(o);
        console.log(u), e.looker = t(new Firebase(u))
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), LookingForDogCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.lookingForDog = this, e.home.IsSearchHidden = !0
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), ManageBreederAccountCtrl = function () {
    function e(e, t, n, r, i) {
        var s = this;
        this.$scope = e, this.settings = t, this.$state = n, this.toastr = r, this.$firebase = i, e.manageBreederAccount = this, this.$scope.home.auth.$getCurrentUser().then(function (t) {
            s.$scope.home.Breedership(s.$scope.home.FireProcess(t.email)).then(function () {
                var n = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.email) + "/subscriptions";
                e.subscription = i(new Firebase(n)), e.subscription.$on("value", function (t) {
                    e.hasSubscription = !_.isEmpty(t.snapshot.value)
                });
                var r = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.email);
                e.breeder = i(new Firebase(r))
            })
        }), e.remove = function () {
            e.breeder.$remove().then(function () {
                e.home.Logout()
            })
        }, e.cancelSubscription = function () {
            e.subscription.$remove().then(function () {
                s.ShowSuccess(s.settings.delSubscriptionNotice)
            })
        }, e.popoverCancelSubscription = {title: "Deactivate your subscription plan?", template: "../../views/modals/cancel-subscription.html"}
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), MessagesCtrl = function () {
    function e(e, t, n, r, i, s, o, u, a, f) {
        var l = this;
        this.$scope = e, this.FinduserService = t, this.$firebase = n, this.settings = r, this.$filter = i, this.$state = u, this.toastr = a, this.DataService = f, e.noMessages = r.noMessages, e.noSuchUser = !1, e.messages = this, e.reply = {}, e.home.hideMenu = !0, e.home.auth.$getCurrentUser().then(function (t) {
            e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                var r, i = e.home.MainUrl;
                e.home.isBreeder === !0 && (r = "breeders/"), e.home.isBreeder === !1 && (r = "lookers/"), i = i + r + e.home.FireProcess(t.email) + "/messages", l.messagesRef = n(new Firebase(i)), l.fireMessages = l.messagesRef, l.SetSelectedUser(0)
            })
        })
    }

    return e.prototype.Delete = function () {
        var e = this;
        this.DataService.deleteConversation(this.$scope.home.userName, this.selectedUser.userName, this.$scope.home.isBreeder).then(function () {
            _.where(e.fireMessages, {isTrash: !1, userName: e.selectedUser.userName}).forEach(function (e) {
                e.isTrash = !0
            }), e.SetSelectedUser(0)
        })
    }, e.prototype.Recover = function () {
        var e = this;
        this.DataService.recoverConversation(this.$scope.home.userName, this.selectedUser.userName, this.$scope.home.isBreeder).then(function () {
            _.where(e.fireMessages, {isTrash: !0, userName: e.selectedUser.userName}).forEach(function (e) {
                e.isTrash = !1
            }), e.SetSelectedUser(0)
        })
    }, e.prototype.DeleteForever = function () {
        var e = this;
        this.DataService.deleteForever(this.$scope.home.userName, this.selectedUser.userName, this.$scope.home.isBreeder).then(function () {
            e.fireMessages = _.without(e.fireMessages, _.findWhere(e.fireMessages, {isTrash: !0, userName: e.selectedUser.userName})), e.SetSelectedUser(0)
        })
    }, e.prototype.SendNewMessage = function (e, t, n) {
        var r = this;
        this.$scope.home.auth.$getCurrentUser().then(function (i) {
            r.$scope.home.Breedership(r.$scope.home.FireProcess(i.email)).then(function () {
                r.FinduserService.find(e).then(function (e) {
                    r.$scope.home.isBreeder === !0 && r.DataService.sendReply(r.$scope.home.userName, e.Email, e.UserName, t, !0).then(function () {
                    }), r.$scope.home.isBreeder === !1 && r.DataService.sendLookerReply(r.$scope.home.userName, e.Email, e.UserName, t, !0).then(function () {
                    }), e.isBreeder === !0 && r.DataService.sendReply(e.Email, r.$scope.home.userName, r.$scope.home.nickName, t, !1).then(function () {
                        r.SetSelectedUser(0), n && r.$state.go("^"), r.$scope.reply.body = "", r.ShowSuccess(r.settings.messageSuccessNotice)
                    }), e.isBreeder === !1 && r.DataService.sendLookerReply(e.Email, r.$scope.home.userName, r.$scope.home.nickName, t, !1).then(function () {
                        r.SetSelectedUser(0), n && r.$state.go("^"), r.$scope.note.body = "", r.$scope.note.to = "", r.$scope.reply.body = "", r.ShowSuccess(r.settings.messageSuccessNotice)
                    })
                }, function () {
                    r.ShowError(r.settings.noSuchUser), r.$scope.noSuchUser = !0
                })
            })
        })
    }, e.prototype.SetSelectedUser = function (e) {
        var t = this;
        this.selectedUserIndex = e;
        var n = this.fireMessages;
        n = _.sortBy(n, function (e) {
            return-e.sent
        });
        var r = _.map(_.uniq(_.filter(n, function (e) {
            return _.isNull(e) ? void 0 : e.isTrash === t.isTrash
        })), function (e) {
            return{userName: e.userName, nickName: e.nickName}
        });
        r = _.uniq(r, !1, function (e) {
            return e.userName
        }), this.selectedUser = r[this.selectedUserIndex], _.isUndefined(this.fireMessages) || _.isUndefined(this.selectedUser) || (this.messagesRef.$getIndex().forEach(function (e) {
            var n = t.messagesRef[e];
            n.nickName == t.selectedUser.nickName && (n.isUnread = !1)
        }), this.messagesRef.$save())
    }, e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), PaymentCancelAnnuallyCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.$firebase = r, e.paymentCancelAnnually = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), PaymentCancelCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.$firebase = r, e.paymentCancel = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), PaymentSuccessAnnuallyCtrl = function () {
    function e(e, t, n, r, i, s, o) {
        var u = this;
        this.$scope = e, this.$state = r, this.toastr = i, this.PlankeeperService = s, this.$firebase = o, e.paymentSuccess = this, e.startNewPlan = function (r, s) {
            var u = e.home.MainUrl + "subscriptions", a = u + "/plans", f = u + "/features", l = o(new Firebase(f));
            l.$on("value", function (u) {
                var f, l, c = u.snapshot.value, h = t("orderByPriority")(c), p = new Date, d = o(new Firebase(a));
                d.$on("value", function (u) {
                    var a = u.snapshot.value, c = t("orderByPriority")(a);
                    c.forEach(function (t) {
                        if (s == t.name) {
                            if (t.hasOwnProperty("comment")) {
                                var u = t.comment.split(" ");
                                u.forEach(function (e) {
                                    var t = parseInt(e);
                                    if (!_.isNaN(t)) {
                                        l = t;
                                        var n = 31 * l;
                                        f = new Date(p.getTime() + 24 * n * 60 * 60 * 1e3)
                                    }
                                })
                            }
                            "Monthly" == t.name && (f = new Date(p.getTime() + 2592e6)), "Annually" == t.name && (f = new Date(p.getTime() + 31536e6));
                            var a = {name: t.name, startDate: new Date(Date.now()), expirationDate: f};
                            h.forEach(function (e) {
                                var t, n = e.name, r = _.keys(e);
                                r.forEach(function (n) {
                                    n.toLowerCase() == s.toLocaleLowerCase() && (t = e[n])
                                }), a[n] = t
                            });
                            var c = e.home.MainUrl + "breeders/" + e.home.FireProcess(r) + "/subscriptions";
                            console.log(c);
                            var d = o(new Firebase(c));
                            d.$remove(), d.$add(a).then(function () {
                                i.success(n.annualSubscriptionNotice)
                            })
                        }
                    })
                })
            })
        }, this.$scope.home.auth.$getCurrentUser().then(function (t) {
            u.$scope.home.Breedership(u.$scope.home.FireProcess(t.email)).then(function () {
                e.startNewPlan(t.email, "Annually"), r.go("user.profile.about1", {uname: t.email})
            })
        })
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), PaymentSuccessCtrl = function () {
    function e(e, t, n, r, i, s, o) {
        var u = this;
        this.$scope = e, this.$state = r, this.toastr = i, this.PlankeeperService = s, this.$firebase = o, e.paymentSuccess = this, e.startNewPlan = function (r, s) {
            var u = e.home.MainUrl + "subscriptions", a = u + "/plans", f = u + "/features", l = o(new Firebase(f));
            l.$on("value", function (u) {
                var f, l, c = u.snapshot.value, h = t("orderByPriority")(c), p = new Date, d = o(new Firebase(a));
                d.$on("value", function (u) {
                    var a = u.snapshot.value, c = t("orderByPriority")(a);
                    c.forEach(function (t) {
                        if (s == t.name) {
                            if (t.hasOwnProperty("comment")) {
                                var u = t.comment.split(" ");
                                u.forEach(function (e) {
                                    var t = parseInt(e);
                                    if (!_.isNaN(t)) {
                                        l = t;
                                        var n = 31 * l;
                                        f = new Date(p.getTime() + 24 * n * 60 * 60 * 1e3)
                                    }
                                })
                            }
                            "Monthly" == t.name && (f = new Date(p.getTime() + 2592e6)), "Annually" == t.name && (f = new Date(p.getTime() + 31536e6));
                            var a = {name: t.name, startDate: new Date(Date.now()), expirationDate: f};
                            h.forEach(function (e) {
                                var t, n = e.name, r = _.keys(e);
                                r.forEach(function (n) {
                                    n.toLowerCase() == s.toLowerCase() && (t = e[n])
                                }), a[n] = t
                            });
                            var c = e.home.MainUrl + "breeders/" + e.home.FireProcess(r) + "/subscriptions";
                            console.log(c);
                            var d = o(new Firebase(c));
                            d.$remove(), d.$add(a).then(function () {
                                i.success(n.monthlySubscriptionNotice)
                            })
                        }
                    })
                })
            })
        }, this.$scope.home.auth.$getCurrentUser().then(function (t) {
            u.$scope.home.Breedership(u.$scope.home.FireProcess(t.email)).then(function () {
                e.startNewPlan(t.email, "Monthly"), r.go("user.profile.about1", {uname: t.email})
            })
        })
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), PhotosCtrl = function () {
    function e(e, t, n, r, i, s) {
        var o = this;
        this.$scope = e, this.$filter = t, this.$firebase = n, this.$state = i, e.home.menuIndex = 2, e.noGalleryNotice = s.noGalleryNotice, e.$watch("photosCtrl.GalleriesNew", function () {
            for (var e = 0; e < o.GalleriesNew.length; e++) {
                var t = o.GalleriesNew[e];
                if (!("undefined" != typeof t.Title && t.Title.length < 250)) {
                    o.$scope.isOk = !0;
                    break
                }
                o.$scope.isOk = !1
            }
        }, !0);
        var u = new Gallery;
        this.GalleriesNew = new Array(u), e.photosCtrl = this, e.home.url = "photos";
        var a = e.home.MainUrl + "breeders/" + e.home.FireProcess(r.uname) + "/galleries";
        e.galleries = n(new Firebase(a)), e.newGalleries = [], this.$scope.home.auth.$getCurrentUser().then(function (t) {
            return null == t ? void (e.home.isLoadFinished = !0) : void o.$scope.home.Breedership(o.$scope.home.FireProcess(t.email)).then(function () {
                e.home.isLoadFinished = !0
            })
        }), e.onNewFileSelect = function (t, n) {
            var r = e.galleries.$child(n).$child("photos");
            console.log(n), t.forEach(function (e) {
                var t = new FileReader;
                t.onload = function (e) {
                    var t = e.target.result;
                    r.$add({caption: "picture1", file64: t})
                }, t.readAsDataURL(e)
            }), r.$save()
        }
    }

    return e.prototype.saveNewGalleries = function () {
        var e = this;
        this.$scope.newGalleries.forEach(function (t) {
            "" === t.Title && (t.Title = "New Gallery");
            var n = _.omit(t, "Photos");
            e.$scope.galleries.$add(n).then(function (n) {
                t.Photos.forEach(function (t) {
                    e.$scope.galleries.$child(n.name()).$child("Photos").$add(_.omit(t, "isSized"))
                })
            })
        }), this.$scope.newGalleries = []
    }, e.prototype.cancelGalleries = function () {
        this.$scope.newGalleries = []
    }, e.prototype.addGallery = function () {
        this.$scope.addGallTemplate = !0;
        var e = new Gallery;
        e.Title = "My New Photo Gallery", e.isTemp = !0, this.$scope.newGalleries.unshift(e)
    }, e
}(), PuppiesCtrl = function () {
    function e(e, t, n, r, i, s, o, u, a) {
        var f = this;
        this.$scope = e, this.$firebase = t, this.$modal = n, this.$stateParams = r, this.$state = i, this.toastr = s, this.DataService = o, this.CopyProfileService = u, this.settings = a, e.noLitterNotice = a.noLitterNotice;
        var l = e.home.FireProcess(r.uname), c = e.home.MainUrl + "breeders/" + l + "/litters";
        e.litters = t(new Firebase(c)), this.$scope.home.auth.$getCurrentUser().then(function (t) {
            f.$scope.home.Breedership(f.$scope.home.FireProcess(t.email)).then(function () {
                e.home.isLoadFinished = !0
            })
        }), this.LittersNew = [], e.home.url = "puppies", e.puppies = this, e.isOk = !1, e.$watch("puppies.LittersNew", function () {
            for (var e = 0; e < f.LittersNew.length; e++) {
                var t = f.LittersNew[e];
                if (!("undefined" != typeof t.Title && t.Title.length < 250 && "undefined" != typeof t.Puppies && t.Puppies.length < 250 && "undefined" != typeof t.Colors && t.Colors.length < 250)) {
                    f.$scope.isOk = !0;
                    break
                }
                f.$scope.isOk = !1
            }
        }, !0)
    }

    return e.prototype.addNewLitter = function () {
        this.LittersNew.unshift(new Litter)
    }, e.prototype.saveNewLitters = function () {
        var e = this;
        this.LittersNew.forEach(function (t) {
            var n = _.omit(t, "Photos");
            e.$scope.litters.$add(n).then(function (n) {
                t.Photos.forEach(function (t) {
                    e.$scope.litters.$child(n.name()).$child("Photos").$add(_.omit(t, "isSized"))
                })
            })
        }), this.LittersNew = []
    }, e.prototype.cancelLitters = function () {
        this.LittersNew = []
    }, e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), PuppiesLitterCtrl = function () {
    function e(e, t, n, r, i, s) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, this.CopyProfileService = i, this.settings = s, e.puppiesLitter = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), RegisterCtrl = function () {
    function e(e, t, n, r, i, s, o, u) {
        this.$scope = e, this.$firebase = r, this.$state = s, this.toastr = o, this.FinduserService = u, e.register = this, e.home.IsSearchHidden = !1, this.isBreeder = !1
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), SubscriptionsCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.subscriptions = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), TermsCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.DataService = r, e.terms = this, e.home.IsSearchHidden = !1, e.home.IsHome = !1
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), TestimonialsCtrl = function () {
    function e(e, t, n, r, i, s, o, u, a, f) {
        var l = this;
        this.$scope = e, this.settings = n, this.$firebase = i, this.$modal = s, this.$state = o, this.toastr = u, this.DataService = a, this.CopyProfileService = f, e.home.auth.$getCurrentUser().then(function (n) {
            e.home.Breedership(e.home.FireProcess(n.email)).then(function () {
                var n = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.uname) + "/feedbacks";
                e.feedbacks = i(new Firebase(n))
            })
        }), e.rating = 0, this.FeedbacksNew = [], e.home.url = "testimonials", e.testimonials = this, e.isOk = !1, e.$watch("testimonials.FeedbacksNew", function () {
            for (var e = 0; e < l.FeedbacksNew.length; e++) {
                var t = l.FeedbacksNew[e];
                if (!(t.ClientName.length > 0 && t.FeedbackBody.length > 0) && t.ClientName.length < 250 && t.FeedbackBody.length < 500) {
                    l.$scope.isOk = !0;
                    break
                }
                l.$scope.isOk = !1
            }
        }, !0), e.remove = function (e) {
            l.$scope.feedbacks.$remove(e)
        }
    }

    return e.prototype.cancelNew = function () {
        this.FeedbacksNew = []
    }, e.prototype.addNewTestimonial = function () {
        var e = new Feedback;
        this.$scope.home.isOwner || (e.ClientName = this.$scope.home.nickName), this.FeedbacksNew.unshift(e)
    }, e.prototype.saveNewTestimonials = function () {
        var e = this;
        this.FeedbacksNew.forEach(function (t) {
            e.$scope.feedbacks.$add(t)
        }), this.FeedbacksNew = [], this.ShowSuccess(this.settings.dataSaved)
    }, e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), UpgradeCtrl = function () {
    function e(e, t, n, r) {
        this.$scope = e, this.$state = t, this.toastr = n, this.$firebase = r, e.upgrade = this
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), UserManagementCtrl = function () {
    function e(e, t, n, r, i, s, o, u, a) {
        var f = this;
        this.$scope = e, this.$modal = r, this.$firebase = s, this.$state = o, this.toastr = u, this.DataService = a, e.message = {}, this.urlRef = e.home.MainUrl + "breeders", this.breeders = s(new Firebase(this.urlRef)), this.urlRef = e.home.MainUrl + "lookers", this.lookers = s(new Firebase(this.urlRef)), e.management = this, e.showMessages = [], e.plan = {}, e.modal = {title: "New Message", show: !0}, e.popoverDelete = {title: "Delete Forever?", template: "../../views/modals/delete-confirmation.html"}, e.popoverPlans = {title: "Breeder Plans", template: "../../views/modals/subscriptions.html"}, e.changeS = function (t) {
            e.plan.val = t
        }, e.changePlan = function (t, n) {
            if (t = e.home.FireProcess(t), 0 == n) {
                var r = e.home.MainUrl + "breeders/" + t + "/subscriptions", i = s(new Firebase(r));
                i.$remove(), u.success("Subscription plan has been changed.")
            } else e.startNewPlan(t, n)
        }, e.startNewPlan = function (t, r) {
            var i = e.home.MainUrl + "subscriptions", o = i + "/plans", a = i + "/features", f = s(new Firebase(a));
            f.$on("value", function (i) {
                var a, f, l = i.snapshot.value, c = n("orderByPriority")(l), h = new Date, p = s(new Firebase(o));
                p.$on("value", function (i) {
                    var o = i.snapshot.value, l = n("orderByPriority")(o);
                    l.forEach(function (n) {
                        if (r == n.name) {
                            if (n.hasOwnProperty("comment")) {
                                var i = n.comment.split(" ");
                                i.forEach(function (e) {
                                    var t = parseInt(e);
                                    if (!_.isNaN(t)) {
                                        f = t;
                                        var n = 31 * f;
                                        a = new Date(h.getTime() + 24 * n * 60 * 60 * 1e3)
                                    }
                                })
                            }
                            "Monthly" == n.name && (a = new Date(h.getTime() + 2592e6)), "Annually" == n.name && (a = new Date(h.getTime() + 31536e6));
                            var o = {name: n.name, startDate: new Date(Date.now()), expirationDate: a};
                            c.forEach(function (e) {
                                var t, n = e.name, i = _.keys(e);
                                i.forEach(function (n) {
                                    n == r && (t = e[n])
                                }), o[n] = t
                            });
                            var l = e.home.MainUrl + "breeders/" + e.home.FireProcess(t) + "/subscriptions", p = s(new Firebase(l));
                            p.$remove(), p.$add(o).then(function () {
                                u.success("Subscription plan has been changed.")
                            })
                        }
                    })
                })
            })
        }, e.remove = function (e) {
            _.isUndefined(e) || _.isNull(e) || (f.breeders.$remove(e), f.lookers.$remove(e))
        }, e.sendNewMessage = function (n, r, i) {
            e.addressat = r, e.admin = "Admin";
            var s = new Note;
            s.body = e.message.body, s.userName = e.admin, s.isTrash = !1, s.sent = Date.now(), s.amISender = !1;
            var o = i ? "breeders" : "lookers", a = e.home.MainRefFire.$child(o).$child(e.addressat.replace(/\./g, "(p)")).$child("messages");
            a.$add(s);
            var f = new Note;
            f.body = e.message.body, f.userName = e.addressat, f.isTrash = !1, f.sent = Date.now(), f.amISender = !0;
            var l = e.home.MainRefFire.$child("admins").$child("messages");
            l.$add(f).then(function () {
                u.success(t.messageSuccessNotice)
            })
        }
    }

    return e.prototype.ShowSuccess = function (e) {
        this.toastr.info(e)
    }, e.prototype.ShowError = function (e) {
        this.toastr.error(e)
    }, e
}(), breederDetails = function () {
    return{restrict: "E", templateUrl: "views/directives/breeder-details.html", replace: !0, link: function (e) {
        e.IsEdit = !1, e.b = {}, e.b.profile = {}, e.b.profile.UserName = e.index.BreederName, e.Edit = function () {
            e.index.Clone(), e.IsEdit = !0
        }, e.Cancel = function () {
            e.IsEdit = !1
        }, e.Save = function () {
            e.index.Save(e.index.BreederProfileCopy), e.IsEdit = !1
        }
    }, controller: function (e) {
        e.message = {}
    }}
}, aboutInfo = function () {
    return{restrict: "E", templateUrl: "views/directives/about-info.html", replace: !0, link: function (e) {
        e.home.url = "about"
    }}
}, aboutInfoEdit = function () {
    return{restrict: "E", templateUrl: "views/directives/about-info-edit.html", transclude: !0, replace: !0, scope: {ctrl: "=", isOwner: "=", text: "@", func: "&", home: "=", breedsa: "="}, controller: function (e, t, n) {
        var r = e.home.FireProcess(t.uname);
        e.newBreed = {}, e.addNewBreeds = function (t) {
            t.forEach(function (t) {
                e.breeds.$add(t)
            }), e.breeder.breeds = []
        }, e.popoverDelete = {title: "Delete?", template: "../../views/modals/delete-confirmation.html"}, e.remove = function (t) {
            e.breeds.$remove(t)
        }, e.breeds = n(new Firebase(e.home.MainUrl + "/breeders/" + r + "/profile/breeds"))
    }, link: function (e) {
        e.ResetAllFields = function () {
            e.ctrl.BreederProfileEdit.KennelName = "", e.ctrl.BreederProfileEdit.Story = "", e.ctrl.BreederProfileEdit.Parents = "", e.ctrl.BreederProfileEdit.Boys = "", e.ctrl.BreederProfileEdit.Girls = "", e.ctrl.BreederProfileEdit.AddInfo = "", e.form.$setDirty()
        }, e.Next = function () {
        }
    }}
}, breedInfo = function () {
    return{restrict: "E", templateUrl: "views/directives/breed-info.html", transclude: !0, replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, link: function () {
    }}
}, breederProfileNav = function () {
    return{restrict: "E", templateUrl: "views/directives/breeder-profile-nav.html", replace: !0, link: function (e) {
        e.showMenu = !0
    }}
}, button = function () {
    return{restrict: "E", template: "<button>Test</button>", transclude: !0, replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, link: function () {
    }}
}, cover = function () {
    return{restrict: "E", templateUrl: "views/directives/cover.html", replace: !0, controller: function (e, t, n, r, i) {
        e.profileModal = r({scope: e, template: "../views/modals/profile-picture.html", animation: "am-fade-and-scale", placement: "center", show: !1}), e.showProfile = function () {
            e.profileModal.$promise.then(e.profileModal.show)
        }, e.showChangeBtn = !1, e.files = [], e.chgBtnShown = function () {
            e.showChangeBtn = !0
        }, e.chgBtnHidden = function () {
            e.showChangeBtn = !1
        }, e.showChangeCoverBtn = !1, e.chgCoverBtnShown = function () {
            e.showChangeCoverBtn = !0
        }, e.chgCoverBtnHidden = function () {
            e.showChangeCoverBtn = !1
        }, e.show64 = function () {
            console.log("test12")
        };
        var s = i.uname, o = e.home.MainUrl;
        o += e.home.FireProcess(s) + "breeders/profile/images/avatar", e.avatar = t(new Firebase(o)), e.avatar.$on("value", function (t) {
            e.isAvatarChanged = !_.isEmpty(t.snapshot.value), e.avatarsrc = _.values(t.snapshot.value)[0]
        });
        var u = e.home.MainUrl;
        u += "breeders/profile/", u += e.home.FireProcess(s) + "/images/cover", e.cover = t(new Firebase(u)), e.cover.$on("value", function (t) {
            e.isCoverChanged = !_.isEmpty(t.snapshot.value), e.coversrc = _.values(t.snapshot.value)[0]
        })
    }}
}, currentLitters = function () {
    return{restrict: "E", templateUrl: "views/directives/current-litters.html", replace: !0, link: function () {
    }}
}, detailsInfo = function () {
    return{restrict: "E", templateUrl: "views/directives/details-info.html", replace: !0, link: function (e) {
        e.home.menuIndex = 4, e.home.url = "details"
    }}
}, detailsInfoEdit = function () {
    return{restrict: "E", templateUrl: "views/directives/details-info-edit.html", transclude: !0, replace: !0, scope: {ctrl: "=", isOwner: "=", text: "@", func: "&"}, link: function (e) {
        e.ResetAllFields = function () {
            e.ctrl.BreederProfileEdit.KennelName = "", e.ctrl.BreederProfileEdit.Website = "", e.ctrl.BreederProfileEdit.Email = "", e.ctrl.BreederProfileEdit.Phone = "", e.ctrl.BreederProfileEdit.Location = "", e.ctrl.BreederProfileEdit.State = "", e.ctrl.BreederProfileEdit.Zip = "", e.ctrl.BreederProfileEdit.City = "", e.ctrl.BreederProfileEdit.Shipping = !1
        }, e.SaveKennelName = function () {
            var t = e.ctrl.GetClone();
            t.KennelName = e.ctrl.BreederProfileEdit.KennelName, t.Story = e.ctrl.BreederProfileEdit.Story, e.ctrl.Save(t)
        }
    }, controller: function (e) {
        e.states = [
            {name: "ALABAMA", abbreviation: "AL"},
            {name: "ALASKA", abbreviation: "AK"},
            {name: "AMERICAN SAMOA", abbreviation: "AS"},
            {name: "ARIZONA", abbreviation: "AZ"},
            {name: "ARKANSAS", abbreviation: "AR"},
            {name: "CALIFORNIA", abbreviation: "CA"},
            {name: "COLORADO", abbreviation: "CO"},
            {name: "CONNECTICUT", abbreviation: "CT"},
            {name: "DELAWARE", abbreviation: "DE"},
            {name: "DISTRICT OF COLUMBIA", abbreviation: "DC"},
            {name: "FEDERATED STATES OF MICRONESIA", abbreviation: "FM"},
            {name: "FLORIDA", abbreviation: "FL"},
            {name: "GEORGIA", abbreviation: "GA"},
            {name: "GUAM", abbreviation: "GU"},
            {name: "HAWAII", abbreviation: "HI"},
            {name: "IDAHO", abbreviation: "ID"},
            {name: "ILLINOIS", abbreviation: "IL"},
            {name: "INDIANA", abbreviation: "IN"},
            {name: "IOWA", abbreviation: "IA"},
            {name: "KANSAS", abbreviation: "KS"},
            {name: "KENTUCKY", abbreviation: "KY"},
            {name: "LOUISIANA", abbreviation: "LA"},
            {name: "MAINE", abbreviation: "ME"},
            {name: "MARSHALL ISLANDS", abbreviation: "MH"},
            {name: "MARYLAND", abbreviation: "MD"},
            {name: "MASSACHUSETTS", abbreviation: "MA"},
            {name: "MICHIGAN", abbreviation: "MI"},
            {name: "MINNESOTA", abbreviation: "MN"},
            {name: "MISSISSIPPI", abbreviation: "MS"},
            {name: "MISSOURI", abbreviation: "MO"},
            {name: "MONTANA", abbreviation: "MT"},
            {name: "NEBRASKA", abbreviation: "NE"},
            {name: "NEVADA", abbreviation: "NV"},
            {name: "NEW HAMPSHIRE", abbreviation: "NH"},
            {name: "NEW JERSEY", abbreviation: "NJ"},
            {name: "NEW MEXICO", abbreviation: "NM"},
            {name: "NEW YORK", abbreviation: "NY"},
            {name: "NORTH CAROLINA", abbreviation: "NC"},
            {name: "NORTH DAKOTA", abbreviation: "ND"},
            {name: "NORTHERN MARIANA ISLANDS", abbreviation: "MP"},
            {name: "OHIO", abbreviation: "OH"},
            {name: "OKLAHOMA", abbreviation: "OK"},
            {name: "OREGON", abbreviation: "OR"},
            {name: "PALAU", abbreviation: "PW"},
            {name: "PENNSYLVANIA", abbreviation: "PA"},
            {name: "PUERTO RICO", abbreviation: "PR"},
            {name: "RHODE ISLAND", abbreviation: "RI"},
            {name: "SOUTH CAROLINA", abbreviation: "SC"},
            {name: "SOUTH DAKOTA", abbreviation: "SD"},
            {name: "TENNESSEE", abbreviation: "TN"},
            {name: "TEXAS", abbreviation: "TX"},
            {name: "UTAH", abbreviation: "UT"},
            {name: "VERMONT", abbreviation: "VT"},
            {name: "VIRGIN ISLANDS", abbreviation: "VI"},
            {name: "VIRGINIA", abbreviation: "VA"},
            {name: "WASHINGTON", abbreviation: "WA"},
            {name: "WEST VIRGINIA", abbreviation: "WV"},
            {name: "WISCONSIN", abbreviation: "WI"},
            {name: "WYOMING", abbreviation: "WY"}
        ]
    }}
}, events = function () {
    return{restrict: "E", templateUrl: "views/directives/events.html", replace: !0, link: function () {
    }}
}, feedback = function () {
    return{restrict: "E", templateUrl: "views/directives/feedback.html", replace: !0, link: function () {
    }}
}, feedbackEdit = function () {
    return{restrict: "E", templateUrl: "views/directives/feedback-edit.html", replace: !0, controller: function (e, t, n, r) {
        var i = t.id;
        e.home.auth.$getCurrentUser().then(function (t) {
            e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                var r = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.email) + "/feedbacks/" + i;
                e.feedback = n(new Firebase(r))
            })
        }), e.updateFeedback = function (t, n, i) {
            var s = new Feedback;
            s.ClientName = t, s.FeedbackBody = i, s.Evaluation = n, e.feedback.$set({ClientName: t, Evaluation: n, FeedbackBody: i}).then(function () {
                r.go("^")
            })
        }
    }}
}, galleryNew = function () {
    return{restrict: "E", templateUrl: "views/directives/gallery-new.html", replace: !0, link: function () {
    }}
}, litterNew = function () {
    return{restrict: "E", templateUrl: "views/directives/litter-new.html", replace: !0, scope: {l: "="}, controller: function (e) {
        e.files = []
    }, link: function () {
    }}
}, lookerProfileNav = function () {
    return{restrict: "E", templateUrl: "views/directives/looker-profile-nav.html", replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, link: function () {
    }}
}, messageNavMenu = function () {
    return{restrict: "E", templateUrl: "views/directives/message-nav-menu.html", replace: !0, link: function () {
    }}
}, newMessage = function () {
    return{restrict: "E", templateUrl: "views/directives/new-message.html", replace: !0}
}, photoGallery = function () {
    return{restrict: "E", templateUrl: "views/directives/photo-gallery.html", replace: !0, controller: function (e, t, n, r, i, s) {
        e.home.isLoadFinished = !1;
        var o = i.id, u = e.home.FireProcess(i.uname), a = e.home.MainUrl + "breeders/" + u + "/galleries/" + o;
        e.gallery = t(new Firebase(a)), e.home.auth.$getCurrentUser().then(function (t) {
            return null == t ? void (e.home.isLoadFinished = !0) : void e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                e.home.isLoadFinished = !0
            })
        }), e.remove = function (t) {
            e.gallery.$remove(t).then(function () {
                s.go("^")
            })
        }
    }, link: function () {
    }}
}, photoGalleryEdit = function () {
    return{restrict: "E", templateUrl: "views/directives/photo-gallery-edit.html", replace: !0, controller: function (e, t) {
        e.files = [], e.saveGallery = function () {
            var n = e.gallery.$child("Photos");
            e.files.forEach(function (e) {
                n.$add(e)
            }), e.gallery.$save().then(function () {
                t.go("^")
            })
        }, e.saveTitle = function () {
            e.gallery.$save("Title").then(function () {
            })
        }, e.remove = function (t) {
            e.gallery.$child("Photos").$child(t).$remove()
        }
    }}
}, previousPuppies = function () {
    return{restrict: "E", templateUrl: "views/directives/previous-puppies.html", transclude: !0, replace: !0, controller: function (e, t, n) {
        var r = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.uname) + "/galleries";
        e.galleries = n(new Firebase(r)), e.indexPrev = 0, e.showAddPhotosButton = !1, e.addBtnShown = function () {
            e.showAddPhotosButton = !0
        }, e.addBtnHidden = function () {
            e.showAddPhotosButton = !1
        }, e.next = function () {
            e.indexPrev++, e.indexPrev >= e.expuppies.length && (e.indexPrev = 0)
        }, e.prev = function () {
            e.indexPrev--, e.indexPrev < 0 && (e.indexPrev = e.expuppies.length - 1)
        }, e.selectPrevPictures = function (t) {
            var n = [];
            t.$on("value", function (r) {
                var i = (r.snapshot.value, t.$getIndex());
                i.forEach(function (e) {
                    var r = t[e];
                    r.isPrevPuppy && _.values(r.Photos).forEach(function (t) {
                        -1 == n.indexOf(t) && (t = _.extend(t, {gid: e}), n.push(t))
                    })
                }), e.expuppies = _.shuffle(n = _.uniq(n, function (e) {
                    return e.caption
                }))
            })
        }, e.selectPrevPictures(e.galleries), e.g = new Gallery, e.g.isPrevPuppy = !0, e.g.Title = "Our Previous Puppies Photos", e.btnTitle = "Add Photos", e.$watch("g.Photos", function (t) {
            t.length > 0 && (e.btnTitle = "Add More Photos")
        }, !0), e.savePrevPuppies = function () {
            var r = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.uname) + "/galleries";
            e.galleries = n(new Firebase(r)), "" === e.g.Title && (e.g.Title = "Our Previous Puppies Photos");
            var i = _.omit(e.g, "Photos");
            e.galleries.$add(i).then(function (t) {
                e.g.Photos.forEach(function (n) {
                    e.galleries.$child(t.name()).$child("Photos").$add(_.omit(n, "isSized"))
                }), e.g = new Gallery, e.g.Title = "Our Previous Puppies Photos", e.btnTitle = "Add Photos"
            })
        }
    }, link: function () {
    }}
}, randomGallery = function () {
    return{restrict: "E", templateUrl: "views/directives/random-gallery.html", transclude: !0, replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, link: function () {
    }}
}, setter = function () {
    return{restrict: "E", link: function (e) {
        e.home.IsHome = !0
    }}
}, setterIshome = function () {
    return{restrict: "E", link: function (e) {
        e.home.IsSearchHidden = !0
    }}
}, spinDiv = function () {
    return{restrict: "E", templateUrl: "views/directives/spin-div.html", transclude: !0, replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, link: function () {
    }}
}, subscriptionPlans = function (e, t, n, r, i, s) {
    return{restrict: "E", templateUrl: "views/directives/subscription-plans.html", scope: {home: "=", isAdmin: "="}, replace: !0, controller: function (e, i) {
        e.features = e.home.MainRefFire.$child("subscriptions").$child("features"), e.plans = e.home.MainRefFire.$child("subscriptions").$child("plans"), e.home.auth.$getCurrentUser().then(function (t) {
            return _.isNull(t) ? void (e.isLoggedIn = !1) : (e.isLoggedIn = !0, _.isUndefined(t.email) && (t.email = t.id), void e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                e.feature = {}, e.popover = {title: "Add New Subscription Feature"}, e.popoverDelete = {title: "Delete forever?", template: "../../views/modals/delete-confirmation.html"}
            }))
        }), e.setPlanToPay = function (e) {
            s.setPlan(e)
        }, e.startPlan = function (s) {
            var o = e.home.MainUrl + "subscriptions", u = o + "/plans", a = o + "/features", f = r(new Firebase(a));
            f.$on("value", function (o) {
                var a, f, l = o.snapshot.value, c = n("orderByPriority")(l), h = new Date, p = r(new Firebase(u));
                p.$on("value", function (o) {
                    var u = o.snapshot.value, l = n("orderByPriority")(u);
                    l.forEach(function (n) {
                        if (s.toLowerCase() == n.name.toLowerCase()) {
                            if (!n.hasOwnProperty("comment"))return;
                            var o = n.comment.split(" ");
                            o.forEach(function (o) {
                                var u = parseInt(o);
                                if (!_.isNaN(u)) {
                                    f = u;
                                    var l = 31 * f;
                                    a = new Date(h.getTime() + 24 * l * 60 * 60 * 1e3);
                                    var p = {name: n.name, startDate: new Date(Date.now()), expirationDate: a};
                                    c.forEach(function (e) {
                                        var t, n = e.name, r = _.keys(e);
                                        r.forEach(function (n) {
                                            n == s && (t = e[n])
                                        }), p[n] = t
                                    });
                                    var d = e.home.MainUrl + "breeders/" + e.home.userNameFire + "/subscriptions", v = r(new Firebase(d));
                                    v.$remove(), v.$add(p).then(function () {
                                        i.success(p.name + " plan is activated"), t.go("user.profile.manage")
                                    })
                                }
                            })
                        }
                    })
                })
            })
        }, e.addNewFeature = function () {
            var t = new Feature;
            t.name = e.feature.name, t.comment = e.feature.comment, e.features.$add(t)
        }, e.remove = function (t) {
            e.features.$remove(t)
        }, e.savePlans = function () {
            e.features.$save().then(function () {
                e.plans.$save().then(function () {
                    i.success("success")
                })
            })
        }
    }, link: function () {
    }}
}, svAddPrevPuppies = function (e) {
    return{restrict: "E", template: '<button class="btn btn-default btn-sniff-md z-index-high" ng-if="home.isOwner" ng-click="showAddPrevPuppies()">Add Photos</button>', replace: !0, controller: function (t) {
        var n = e({scope: t, template: "../../views/modals/add-prev-puppies.html", show: !1});
        t.showAddPrevPuppies = function () {
            n.$promise.then(n.show)
        }
    }, link: function () {
    }}
}, svContactModal = function (e) {
    return{restrict: "E", templateUrl: "views/directives/sv-contact-modal.html", replace: !0, controller: function (t, n, r, i, s) {
        t.ShowSuccess = function (e) {
            s.success(e)
        }, t.message = {}, t.modalMessage = n({title: "New Message", scope: t, show: !1, template: "../views/modals/admin-message.html"}), t.showMessage = function () {
            t.modalMessage.show()
        }, t.sendNewMessage = function (n, s) {
            var o = t.message.body, u = s;
            e.find(u).then(function (e) {
                t.home.isBreeder === !0 && r.sendReply(t.home.userName, e.Email, e.UserName, o, !0).then(function () {
                }), t.home.isBreeder === !1 && r.sendLookerReply(t.home.userName, e.Email, e.UserName, o, !0).then(function () {
                }), e.isBreeder === !0 && r.sendReply(e.Email, t.home.userName, t.home.nickName, o, !1).then(function () {
                    t.ShowSuccess(i.messageSuccessNotice)
                }), e.isBreeder === !1 && r.sendLookerReply(e.Email, t.home.userName, t.home.nickName, o, !1).then(function () {
                    t.note.body = "", t.note.to = "", t.reply.body = "", t.ShowSuccess(i.messageSuccessNotice)
                })
            }), t.message = {}
        }
    }}
}, svCropCover = function (e) {
    return{link: function (t, n) {
        function r(e) {
            a = e.pageY - o, u = e.pageX - s, n.css({top: a + "px", left: u + "px"})
        }

        function i() {
            e.off("mousemove", r), e.off("mouseup", i)
        }

        var s = 0, o = 0, u = 0, a = 0;
        n.css({position: "absolute", opacity: .3, left: "100px", top: "100px", border: "1px solid red", backgroundColor: "lightgrey", cursor: "pointer", width: t.scaledCropWidth + "px", height: t.scaledCropHeight + "px"}), n.on("mousedown", function (t) {
            t.preventDefault(), s = t.pageX - u, o = t.pageY - a, e.on("mousemove", r), e.on("mouseup", i)
        })
    }}
}, svDeletePopover = function (e) {
    return{restrict: "A", link: function (t, n) {
        var r = e(n, {title: "My Title", content: "My Content"});
        console.log(r)
    }}
}, svFileSelect = function (e) {
    return{link: function (t, n) {
        n.bind("change", function (n) {
            var r, i, s = [];
            if (r = n.target.files, null != r)for (i = 0; i < r.length; i++)s.push(r.item(i));
            e(function () {
                t.onFileSel(s)
            })
        })
    }}
}, svImage = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-image.html", replace: !0, scope: {i: "=", index: "=", isMult: "=", width: "=", height: "=", fireRef: "=", onFileSelect: "&", closeModal: "&", okModal: "&"}, controller: function (e) {
        e.saveChanges = function () {
            e.fireRef.$remove(), e.fireRef.$add(e.i.file64).then(function () {
                e.closeModal()
            }), e.closeModal()
        };
        e.setInitialImageProp = function (t, n) {
            e.realImageWidth = t, e.realImageHeight = n, e.isCropNeeded = !!(e.realImageWidth > e.width || e.realImageHeight > e.height)
        }, e.setScaledImageProp = function (t) {
            e.scaledImageWidth = t, e.scaledCoefficient = e.scaledImageWidth / e.realImageWidth, e.scaledImageWidth = t, e.scaledImageHeight = Math.floor(e.scaledCoefficient * e.realImageHeight), e.scaledCropWidth = Math.floor(e.scaledCoefficient * parseInt(e.width)), e.scaledCropHeight = Math.floor(e.scaledCoefficient * e.height)
        }
    }, link: function (e) {
        e.cutImage = function () {
            var t = document.getElementById("myCanvas");
            t.style.width = e.width + "px", t.style.height = e.height + "px";
            var n = t.getContext("2d"), r = new Image;
            r.onload = function () {
                var i = e.scaledCoefficient, s = e.x / i, o = e.y / i, u = e.w / i, a = e.h / i, f = e.width, l = e.height, c = 0, h = 0;
                n.drawImage(r, s, o, u, a, c, h, f, l), e.$apply(function () {
                    e.i.file64 = t.toDataURL("image/jpeg", .6), e.hasBeenCropped = !0, e.i.isSized = !0
                })
            }, e.cropAccept = !1, r.src = e.i.file64
        }, e.crop = function () {
            e.cropAccept = !0, e.img = $("#cropme"), e.jcrop_api = e.img.Jcrop({onChange: function (t) {
                e.x = t.x, e.y = t.y, e.w = t.w, e.h = t.h
            }, setSelect: [0, 0, e.width, e.height], aspectRatio: e.width / e.height})
        }
    }}
}, svImageUpload = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-image-upload.html", replace: !0, scope: {files: "=", childPath: "@", closeModal: "&", fileSize: "=", fireRef: "=", height: "=", isMult: "=", isDragShown: "=", isDragHidden: "=", mainRef: "=", btnTitle: "@", okModal: "&", show64: "&", width: "="}, controller: function (e) {
        e.isMult || (e.files = []), e.onFileSelect = function (t, n) {
            t.forEach(function (t) {
                var r = new FileReader;
                t.size > e.fileSize ? _.isUndefined(n) ? e.files.push(new SImage(!1, t.name)) : e.files[n] = new SImage(!1, t.name) : (r.onload = function (r) {
                    var i = r.target.result;
                    e.$apply(function () {
                        _.isUndefined(n) ? e.files.push(new SImage(!0, t.name, i)) : e.files[n] = new SImage(!0, t.name, i)
                    })
                }, r.readAsDataURL(t))
            }), e.isFileChosen = !0
        }
    }, link: function () {
    }}
}, svImageWrapper = function () {
    return{link: function (e, t) {
        t.on("load", function () {
            e.$apply(function () {
                e.setInitialImageProp(t.width(), t.height()), t.addClass("img-responsive"), e.setScaledImageProp(t.width())
            })
        })
    }}
}, svLitter = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-litter.html", replace: !0, controller: function (e, t, n, r, i, s) {
        e.files = [];
        var o = i.id, u = e.home.FireProcess(i.uname), a = e.home.MainUrl + "breeders/" + u + "/litters/" + o;
        e.litter = t(new Firebase(a)), e.home.auth.$getCurrentUser().then(function (t) {
            e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                e.home.isLoadFinished = !0
            })
        }), e.remove = function (t) {
            e.litter.$remove(t).then(function () {
                s.go("^")
            })
        }
    }, link: function () {
    }}
}, svLitterEdit = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-litter-edit.html", replace: !0, controller: function (e, t, n, r) {
        var i = n.id;
        e.home.auth.$getCurrentUser().then(function (t) {
            e.home.Breedership(e.home.FireProcess(t.email)).then(function () {
                var n = e.home.MainUrl + "breeders/" + e.home.FireProcess(t.email) + "/litters/" + i;
                e.litter = r(new Firebase(n)), e.home.isLoadFinished = !0
            })
        }), e.saveLitter = function () {
            var n = e.litter.$child("Photos");
            e.files.forEach(function (t, r) {
                n.$add(t), e.files.splice(r, 1)
            }), e.litter.$save().then(function () {
                t.go("^")
            })
        }, e.remove = function (t) {
            console.log(t), e.litter.$child("Photos").$child(t).$remove()
        }, e.today = function () {
            e.dt = new Date
        }, e.today(), e.clear = function () {
            e.dt = null
        }, e.open = function (t) {
            t.preventDefault(), t.stopPropagation(), e.opened = !0
        }, e.initDate = new Date, e.formats = ["dd-MMMM-yyyy", "yyyy/MM/dd", "dd.MM.yyyy", "shortDate"], e.format = e.formats[2]
    }}
}, svLitterInfo = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-litter-info.html", replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, controller: function () {
    }, link: function () {
    }}
}, svLoginPopover = function (e) {
    return{restrict: "E", template: '<button class="sniff-menu btn-link btn menu-modal">LOG IN</button>', replace: !0, controller: function () {
    }, link: function (t, n) {
        t.lp = e(n, {template: "../../views/modals/login.html", placement: "bottom", scope: t}), t.$watch("lpShown", function (e) {
            0 == e && t.lp.hide()
        })
    }}
}, svLookerInfo = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-looker-info.html", transclude: !0, replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, link: function () {
    }}
}, svLookerInfoEdit = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-looker-info-edit.html", transclude: !0, replace: !0, scope: {ctrl: "=", text: "@", func: "&"}, link: function () {
    }}
}, svMessageShort = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-message-short.html", replace: !0, scope: {index: "=", addressat: "=", showMessages: "=", mainFire: "=", admin: "=", isBreeder: "="}, controller: function (e, t) {
        e.message = {}, e.sendAdminMessage = function (n) {
            var r = new Note;
            r.body = e.message.body, r.userName = e.admin, r.isTrash = !1, r.sent = Date.now(), r.amISender = !1;
            var i = e.isBreeder ? "breeders" : "lookers", s = e.mainFire.$child(i).$child(e.addressat.replace(/\./g, "(p)")).$child("messages");
            s.$add(r);
            var o = new Note;
            o.body = e.message.body, o.userName = e.addressat, o.isTrash = !1, o.sent = Date.now(), o.amISender = !0;
            var u = e.mainFire.$child("admins").$child("messages");
            u.$add(o).then(function () {
                t.success("Message has been send"), e.showMessages.splice(n, 1)
            })
        }, e.cancelAdminMessage = function (t) {
            e.showMessages.splice(t, 1)
        }
    }, link: function () {
    }}
}, svMessages = function (e) {
    return{restrict: "E", templateUrl: "views/directives/sv-messages.html", replace: !0, scope: {messages: "=", isTrash: "=", text: "@", func: "&"}, link: function (t) {
        t.noMessages = e.noMessages, t.messages.isTrash = t.isTrash, t.messages.SetSelectedUser(0)
    }}
}, svPlanOffer = function () {
    return{restrict: "A", scope: {popover: "="}, controller: function () {
    }, link: function (e, t) {
        e.popover && t.on("mouseenter", function () {
            alert("start a plan")
        })
    }}
}, svPwCheck = function () {
    return{require: "ngModel", link: function (e, t, n, r) {
        var i = "#" + n.svPwCheck;
        t.add(i).on("keyup", function () {
            e.$apply(function () {
                var e = t.val() === $(i).val();
                r.$setValidity("pwmatch", e)
            })
        })
    }}
}, svRegisterPopover = function (e) {
    return{restrict: "E", template: '<button class="sniff-menu btn-link btn menu-modal">REGISTER</button>', replace: !0, controller: function () {
    }, link: function (t, n) {
        t.rp = e(n, {template: "../../views/modals/register.html", placement: "bottom", scope: t}), t.$watch("rpShown", function (e) {
            0 == e && t.rp.hide()
        })
    }}
}, svSearchFeature = function () {
    return{restrict: "E", templateUrl: "views/directives/sv-search-feature.html", replace: !0, transclude: !0, scope: {features: "=", add: "&"}, controller: function (e) {
        e.remove = function (t) {
            e.features.$remove(t)
        }
    }, link: function () {
    }}
}, svSlider = function () {
    return{restrict: "A", scope: {h: "@"}, link: function (e, t) {
        t.slimScroll({height: e.h + "px"})
    }}
}, svSpinner = function () {
    return{restrict: "E", template: '<div id="spinner"><img src="img/loader.gif" class="middle-center"> </div>', replace: !0, scope: {radius: "="}, controller: function () {
    }, link: function () {
    }}
}, svStartPlanButton = function () {
    return{restrict: "E", replace: !0, templateUrl: "views/directives/sv-start-plan-button.html", scope: !1, link: function (e, t, n) {
        e.name = n.name
    }}
}, userProfileNav = function () {
    return{restrict: "E", templateUrl: "views/directives/user-profile-nav.html", replace: !0}
}, BoolString = function () {
    function e() {
    }

    return e.filter = function (e) {
        return e === !0 ? "Yes" : "No"
    }, e
}(), GalleryActive = function () {
    function e() {
    }

    return e.filter = function (e, t) {
        var n = [];
        return e.forEach(function (e) {
            e.IsActive === t && n.push(e)
        }), n
    }, e
}(), HideAdmin = function () {
    function e() {
    }

    return e.filter = function () {
        return value === !0 ? "Yes" : "No"
    }, e
}(), SelectUsers = function () {
    function e() {
    }

    return e.filter = function (e, t) {
        return e = _.sortBy(e, function (e) {
            return-e.sent
        }), _.map(_.uniq(_.pluck(_.filter(e, function (e) {
            return _.isNull(e) ? void 0 : e.isTrash === t
        }), "nickName")), function (e) {
            return e.replace(/\(p\)/g, ".")
        })
    }, e
}(), SelectedUserMessages = function () {
    function e() {
    }

    return e.filter = function (e, t, n) {
        return _.filter(e, function (e) {
            return _.isNull(e) ? void 0 : e.isTrash === t && e.userName === n
        })
    }, e
}(), SpacesToDashes = function () {
    function e() {
    }

    return e.filter = function (e) {
        return e.replace(/ /g, "-")
    }, e
}(), TitleLength = function () {
    function e() {
    }

    return e.filter = function (e, t) {
        return e.length <= t ? e : e.substr(0, t) + "..."
    }, e
}(), Unfire = function () {
    function e() {
    }

    return e.filter = function (e) {
        return e.replace(/\(p\)/g, ".")
    }, e
}(), Unshared = function () {
    function e() {
    }

    return e.filter = function (e, t) {
        if (!_.isUndefined(e)) {
            var n = [];
            return e.forEach(function (e) {
                e.isTemp === t && n.push(e)
            }), console.log(n), n
        }
    }, e
}(), Feature = function () {
    function e() {
        this.free = 0, this.monthly = 0, this.annually = 0
    }

    return e
}(), Plan = function () {
    function e() {
    }

    return e
}(), SImage = function () {
    function e(e, t, n) {
        this.isSized = e, this.fileName = t, n && (this.file64 = n), this.caption = t.split(".")[0] + " image"
    }

    return e
}(), Note = function () {
    function e() {
        this.isUnread = !0
    }

    return e
}(), Message = function () {
    function e() {
    }

    return e
}(), Feedback = function () {
    function e() {
        this.ClientName = "", this.FeedbackBody = "", this.Evaluation = 0, this.AddedAt = Date.now()
    }

    return e
}(), Photo = function () {
    function e() {
    }

    return e
}(), Gallery = function () {
    function e() {
        this.Photos = [], this.isTemp = !0
    }

    return e
}(), BreederProfile = function () {
    function e() {
        this.LittersNumber = 0, this.isBreeder = !0, this.isAdmin = !1, this.FirstName = "", this.LastName = "", this.Website = "", this.Email = "", this.Phone = "", this.KennelName = "", this.Story = "", this.Parents = "", this.Boys = "", this.Girls = "", this.AddInfo = "", this.City = "", this.Zip = "", this.State = "", this.Certifications = "", this.Insurances = "", this.IsShowEmail = !0, this.IsShowPhoneNumber = !0, this.Breeds = []
    }

    return e
}(), Litter = function () {
    function e() {
        this.Photos = []
    }

    return e
}(), LookerProfile = function () {
    function e() {
        this.isBreeder = !1, this.FirstName = "", this.LastName = "", this.Email = "", this.Phone = "", this.City = "", this.Zip = "", this.State = ""
    }

    return e
}(), CopyProfileService = function () {
    function e() {
        this.BreederProfile = new BreederProfile
    }

    return e.prototype.GetProfileClone = function () {
        var e = new BreederProfile;
        for (var t in this.BreederProfile)this.BreederProfile.hasOwnProperty(t) && (e[t] = this.BreederProfile[t]);
        return e
    }, e.prototype.SetProfile = function (e) {
        this.BreederProfile = e
    }, e
}(), DataService = function () {
    function e(e, t, n, r, i) {
        this.$http = e, this.$q = t, this.$firebase = n, this.settings = r, this.$filter = i, this.url = r.mainUrl, this.urlLooker = this.url + "lookers/", this.urlBreeder = this.url + "breeders/"
    }

    return e.prototype.sendReply = function (e, t, n, r, i) {
        e = this.FireProcess(e), t = this.FireProcess(t), n = this.FireProcess(n);
        var s = this.$q.defer(), o = this.urlBreeder + e + "/messages", u = this.$firebase(new Firebase(o)), a = new Note;
        return a.amISender = i, a.sent = Date.now(), a.body = r, a.isUnread = 1 == i ? !1 : !0, a.isTrash = !1, a.userName = t, a.nickName = n, u.$add(a), s.resolve(), s.promise
    }, e.prototype.sendLookerReply = function (e, t, n, r, i) {
        e = this.FireProcess(e), t = this.FireProcess(t), n = this.FireProcess(n);
        var s = this.$q.defer(), o = this.urlLooker + e + "/messages", u = this.$firebase(new Firebase(o)), a = new Note;
        return a.amISender = i, a.sent = Date.now(), a.body = r, a.isUnread = 1 == i ? !1 : !0, a.isTrash = !1, a.userName = t, a.nickName = n, u.$add(a), s.resolve(), s.promise
    }, e.prototype.deleteConversation = function (e, t, n) {
        e = this.FireProcess(e), t = this.FireProcess(t);
        var r = this.$q.defer(), i = n ? this.urlBreeder : this.urlLooker, s = i + e + "/messages", o = this.$firebase(new Firebase(s)), u = o.$getIndex(), a = [];
        u.forEach(function (e) {
            a.push(o[e])
        });
        var f = _.where(a, {isTrash: !1, userName: t});
        return f.forEach(function (e) {
            e.isTrash = !0
        }), o.$save(), r.resolve(), r.promise
    }, e.prototype.recoverConversation = function (e, t, n) {
        e = this.FireProcess(e), t = this.FireProcess(t);
        var r = this.$q.defer(), i = n ? this.urlBreeder : this.urlLooker, s = i + e + "/messages", o = this.$firebase(new Firebase(s)), u = o.$getIndex(), a = [];
        u.forEach(function (e) {
            a.push(o[e])
        });
        var f = _.where(a, {isTrash: !0, userName: t});
        return f.forEach(function (e) {
            e.isTrash = !1
        }), o.$save(), r.resolve(), r.promise
    }, e.prototype.deleteForever = function (e, t, n) {
        e = this.FireProcess(e), t = this.FireProcess(t);
        var r = this.$q.defer(), i = n ? this.urlBreeder : this.urlLooker, s = i + e + "/messages", o = this.$firebase(new Firebase(s)), u = o.$getIndex();
        return u.forEach(function (e) {
            var n = o[e];
            n.isTrash === !0 && n.userName === t && o.$remove(e)
        }), o.$save(), r.resolve(), r.promise
    }, e.prototype.getLookerMessages = function (e) {
        var t = this;
        e = this.FireProcess(e);
        var n = this.$q.defer(), r = this.$firebase(new Firebase(this.url + "lookers/" + e + "/messages"));
        return r.$on("value", function (e) {
            var r = e.snapshot.value;
            n.resolve(t.$filter("orderByPriority")(r))
        }), n.promise
    }, e.prototype.getMessages = function (e) {
        var t = this;
        e = this.FireProcess(e);
        var n = this.$q.defer(), r = this.$firebase(new Firebase(this.urlBreeder + e + "/messages"));
        return r.$on("value", function (e) {
            var r = e.snapshot.value;
            n.resolve(t.$filter("orderByPriority")(r))
        }), n.promise
    }, e.prototype.FireProcess = function (e) {
        return e.replace(/\./g, "(p)")
    }, e.prototype.FireUnProcess = function (e) {
        return e.replace(/\(p\)/g, ".")
    }, e.prototype.getMyLookerFollowings = function (e) {
        var t = this;
        e = this.FireProcess(e);
        var n = this.$q.defer(), r = this.url + "lookers/" + e + "/followings", i = this.$firebase(new Firebase(r));
        return i.$on("value", function (e) {
            var r = e.snapshot.value, i = _.map(_.keys(r), function (e) {
                return t.FireUnProcess(e)
            });
            n.resolve(i)
        }), n.promise
    }, e.prototype.getMyFollowings = function (e) {
        var t = this;
        e = this.FireProcess(e);
        var n = this.$q.defer(), r = this.urlBreeder + e + "/followings", i = this.$firebase(new Firebase(r));
        return i.$on("value", function (e) {
            var r = e.snapshot.value, i = _.map(_.keys(r), function (e) {
                return t.FireUnProcess(e)
            });
            n.resolve(i)
        }), n.promise
    }, e.prototype.getMyFollowers = function (e) {
        var t = this;
        e = this.FireProcess(e);
        var n = this.$q.defer(), r = this.urlBreeder + e + "/followers", i = this.$firebase(new Firebase(r));
        return i.$on("value", function (e) {
            var r = e.snapshot.value, i = _.map(_.keys(r), function (e) {
                return t.FireUnProcess(e)
            });
            n.resolve(i)
        }), n.promise
    }, e.prototype.followLookerUser = function (e, t) {
        e = this.FireProcess(e), t = this.FireProcess(t);
        var n = this.$q.defer(), r = this.url + "lookers/" + e + "/followings", i = this.$firebase(new Firebase(r)), s = i.$child(t);
        return s.$add(1), i.$save(), n.resolve(), n.promise
    }, e.prototype.followUser = function (e, t, n) {
        e = this.FireProcess(e), t = this.FireProcess(t);
        var r = this.$q.defer(), i = n ? this.urlBreeder : this.urlLooker, s = i + e + "/followings", o = this.$firebase(new Firebase(s)), u = o.$child(t);
        u.$add(1), o.$save();
        var a = this.urlBreeder + t + "/followers", f = this.$firebase(new Firebase(a)), l = f.$child(e);
        return l.$add(n), f.$save(), r.resolve(), r.promise
    }, e.prototype.unFollowUser = function (e, t, n) {
        e = this.FireProcess(e), t = this.FireProcess(t);
        var r = this.$q.defer(), i = n ? this.urlBreeder : this.urlLooker, s = i + e + "/followings/" + this.FireProcess(t), o = this.$firebase(new Firebase(s));
        o.$remove(), o.$save();
        var u = this.urlBreeder + t + "/followers/" + e, a = this.$firebase(new Firebase(u));
        return a.$remove(), a.$save(), r.resolve(), r.promise
    }, e.prototype.getProfile = function (e) {
        var t = e.replace(/\./g, "(p)");
        this.fb = this.$firebase(new Firebase(this.urlBreeder + t + "/profile")), this.fb.$on("value", function (e) {
            var t = e.snapshot.value;
            n.resolve(t)
        });
        var n = this.$q.defer();
        return n.promise
    }, e.prototype.getAllProfiles = function () {
        var e = this, t = this.$q.defer();
        this.fb = this.$firebase(new Firebase(this.urlBreeder)), this.fb.$on("value", function (n) {
            var r = n.snapshot.value, i = e.$filter("orderByPriority")(r);
            t.resolve(i)
        });
        var t = this.$q.defer();
        return t.promise
    }, e.prototype.updateProfile = function (e) {
        var t = this.$q.defer(), n = e.Email.replace(/\./g, "(p)");
        e = _.omit(e, ["Breeds", "breeds", "LittersNumber"]);
        var r = this.urlBreeder + n + "/profile";
        this.fb = this.$firebase(new Firebase(r));
        for (var n in e)this.fb[n] = e[n];
        return this.fb.$save(), t.resolve(), t.promise
    }, e.prototype.getGalleries = function (e) {
        var t = e.replace(/\./g, "(p)"), n = this.$firebase(new Firebase(this.urlBreeder + t + "/galleries"));
        n.$on("value", function (e) {
            var t = e.snapshot.value;
            r.resolve(t)
        });
        var r = this.$q.defer();
        return r.promise
    }, e.prototype.saveNewTestimonials = function (e, t) {
        {
            var n = this.$q.defer(), r = this.$firebase(new Firebase(this.urlBreeder + t + "/testimonials"));
            r.$getIndex()
        }
        return n.promise
    }, e.prototype.getLitters = function (e) {
        var t = this, n = this.$q.defer(), r = this.$firebase(new Firebase(this.urlBreeder + e + "/litters"));
        return r.$on("value", function (e) {
            var r = e.snapshot.value, i = _.rest(t.$filter("orderByPriority")(r));
            i.forEach(function (e) {
                e.Photos = _.rest(t.$filter("orderByPriority")(e.Photos))
            }), n.resolve(i)
        }), n.promise
    }, e.prototype.saveNewLitters = function (e) {
        {
            var t = this.$q.defer(), n = this.$firebase(new Firebase(this.urlBreeder + e + "/litters"));
            n.$getIndex()
        }
        return t.promise
    }, e.prototype.updateTitle = function (e, t, n) {
        var r = this.$q.defer(), i = this.$firebase(new Firebase(this.urlBreeder + n + "/galleries/" + e));
        return i.$update({Title: t}).then(function () {
            r.resolve()
        }), r.promise
    }, e.prototype.deletePhoto = function (e, t, n) {
        var r = this.$q.defer(), i = this.$firebase(new Firebase(this.urlBreeder + n + "/galleries/" + e + "/Photos/" + t));
        return i.$remove().then(function () {
            r.resolve()
        }), r.promise
    }, e
}(), FinduserService = function () {
    function e(e, t, n, r) {
        this.$firebase = e, this.settings = t, this.$filter = n, this.$q = r
    }

    return e.prototype.find = function (e) {
        var t = this;
        e = this.FireProcess(e);
        var n = this.$q.defer(), r = this.$firebase(new Firebase(this.settings.mainUrl));
        return this.getUser(r, "breeders", e).then(function (e) {
            n.resolve(e)
        }, function () {
            t.getUser(r, "lookers", e).then(function (e) {
                n.resolve(e)
            }, function () {
                n.reject(null)
            })
        }), n.promise
    }, e.prototype.getUser = function (e, t, n) {
        var r = this, i = this.$q.defer(), s = e.$child(t);
        return s.$on("value", function (e) {
            var t = e.snapshot.value, s = _.pluck(r.$filter("orderByPriority")(t), "profile"), o = _.find(s, function (e) {
                return _.isUndefined(e) ? !1 : e.UserName == n
            });
            _.isUndefined(o) ? i.reject(null) : i.resolve(o)
        }), i.promise
    }, e.prototype.findByEmail = function (e) {
        var t = this;
        e = this.FireProcess(e), console.log(e);
        var n = this.$q.defer(), r = this.$firebase(new Firebase(this.settings.mainUrl));
        return this.getUserByEmail(r, "breeders", e).then(function (e) {
            n.resolve(e.profile)
        }, function () {
            t.getUserByEmail(r, "lookers", e).then(function (e) {
                n.resolve(e.profile)
            }, function () {
                n.reject(null)
            })
        }), n.promise
    }, e.prototype.getUserByEmail = function (e, t, n) {
        var r = this.$q.defer();
        n = this.FireProcess(n);
        var i = e.$child(t), s = i.$getIndex(), o = !1;
        return s.forEach(function (e) {
            e == n && (o = !0, r.resolve(i[e]))
        }), o || r.reject(null), r.promise
    }, e.prototype.FireProcess = function (e) {
        return e.replace(/\./g, "(p)")
    }, e.prototype.FireUnProcess = function (e) {
        return e.replace(/\(p\)/g, ".")
    }, e
}(), GalleryService = function () {
    function e() {
    }

    return e.prototype.GetGalleryClone = function () {
        var e = new Gallery;
        for (var t in this.Gallery)this.Gallery.hasOwnProperty(t) && (e[t] = this.Gallery[t]);
        return e
    }, e.prototype.SetGallery = function (e) {
        this.Gallery = e
    }, e
}(), PlankeeperService = function () {
    function e() {
    }

    return e.prototype.setPlan = function (e) {
        this.plan = e
    }, e
}(), BreederGenerator = function () {
    function e() {
    }

    return e.prototype.create = function (e, t, n, r) {
        var i = new BreederProfile, s = t + "breeders", o = n(new Firebase(s)), u = o.$child(e), a = u.$child("profile");
        return i.Email = this.FireUnProcess(e), i.UserName = r, a.$set(i), o.$save(e), i
    }, e.prototype.FireProcess = function (e) {
        return _.isUndefined(e) ? void 0 : e.replace(/\./g, "(p)")
    }, e.prototype.FireUnProcess = function (e) {
        return _.isUndefined(e) ? void 0 : e.replace(/\(p\)/g, ".")
    }, e
}(), LookerGenerator = function () {
    function e() {
    }

    return e.prototype.create = function (e, t, n, r) {
        var i = new LookerProfile, s = t + "lookers";
        console.log(s);
        var o = n(new Firebase(s)), u = o.$child(e), a = u.$child("profile");
        return i.Email = this.FireUnProcess(e), i.UserName = r, a.$set(i), o.$save(e), i
    }, e.prototype.FireProcess = function (e) {
        return _.isUndefined(e) ? void 0 : e.replace(/\./g, "(p)")
    }, e.prototype.FireUnProcess = function (e) {
        return _.isUndefined(e) ? void 0 : e.replace(/\(p\)/g, ".")
    }, e
}(), profile = angular.module("profile", ["cfp.hotkeys", "ngSanitize", "ratings", "mgcrea.ngStrap.helpers.dateParser", "mgcrea.ngStrap.affix", "mgcrea.ngStrap.typeahead", "mgcrea.ngStrap.helpers.parseOptions", "mgcrea.ngStrap.aside", "mgcrea.ngStrap.select", "mgcrea.ngStrap.modal", "mgcrea.ngStrap.datepicker", "mgcrea.ngStrap.popover", "mgcrea.ngStrap.helpers.dimensions", "mgcrea.ngStrap.tooltip", "ui.router", "ImageCropper", "angularFileUpload", "ngAnimate", "firebase"]);
profile.filter("boolString", function () {
    return function (e) {
        return BoolString.filter(e)
    }
}), profile.filter("spacesToDashes", function () {
    return function (e) {
        return SpacesToDashes.filter(e)
    }
}), profile.filter("titleLength", function () {
    return function (e, t) {
        return TitleLength.filter(e, t)
    }
}), profile.filter("galleryActive", function () {
    return function (e, t) {
        return GalleryActive.filter(e, t)
    }
}), profile.filter("selectUsers", function () {
    return function (e, t) {
        return SelectUsers.filter(e, t)
    }
}), profile.filter("selectedUserMessages", function () {
    return function (e, t, n) {
        return SelectedUserMessages.filter(e, t, n)
    }
}), profile.filter("unfire", function () {
    return function (e) {
        return Unfire.filter(e)
    }
}), profile.filter("unshared", function () {
    return function (e, t) {
        return Unshared.filter(e, t)
    }
}), profile.service("CopyProfileService", CopyProfileService), profile.service("GalleryService", GalleryService), profile.service("FinduserService", FinduserService), profile.service("PlankeeperService", PlankeeperService), profile.directive("aboutInfoEdit", aboutInfoEdit), profile.directive("detailsInfo", detailsInfo), profile.directive("detailsInfoEdit", detailsInfoEdit), profile.directive("previousPuppies", previousPuppies), profile.directive("photoGallery", photoGallery), profile.directive("photoGalleryEdit", photoGalleryEdit), profile.directive("spinDiv", spinDiv), profile.directive("litterNew", litterNew), profile.directive("feedback", feedback), profile.directive("feedbackEdit", feedbackEdit), profile.directive("newMessage", newMessage), profile.directive("setter", setter), profile.directive("setterIshome", setterIshome), profile.directive("messageNavMenu", messageNavMenu), profile.directive("userProfileNav", userProfileNav), profile.directive("breederProfileNav", breederProfileNav), profile.directive("events", events), profile.directive("currentLitters", currentLitters), profile.directive("cover", cover), profile.directive("svMessages", svMessages), profile.directive("lookerProfileNav", lookerProfileNav), profile.directive("breedInfo", breedInfo), profile.directive("randomGallery", randomGallery), profile.directive("subscriptionPlans", subscriptionPlans), profile.directive("svImageUpload", svImageUpload), profile.directive("galleryNew", galleryNew), profile.directive("svFileSelect", svFileSelect), profile.directive("svImage", svImage), profile.directive("svImageWrapper", svImageWrapper), profile.directive("svCropCover", svCropCover), profile.directive("svSlider", svSlider), profile.directive("svLitterEdit", svLitterEdit), profile.directive("svLitter", svLitter), profile.directive("svSearchFeature", svSearchFeature), profile.directive("svDeletePopover", svDeletePopover), profile.directive("svContactModal", svContactModal), profile.directive("svPwCheck", svPwCheck), profile.directive("svStartPlanButton", svStartPlanButton), profile.directive("svSpinner", svSpinner), profile.directive("svLoginPopover", svLoginPopover), profile.directive("svRegisterPopover", svRegisterPopover), profile.directive("svAddPrevPuppies", svAddPrevPuppies), profile.directive("aboutInfo", aboutInfo), profile.directive("breederDetails", breederDetails), profile.controller("PhotosCtrl", PhotosCtrl), profile.controller("PuppiesCtrl", PuppiesCtrl), profile.controller("TestimonialsCtrl", TestimonialsCtrl), profile.controller("GenerateCtrl", GenerateCtrl), profile.controller("HomeCtrl", HomeCtrl), profile.controller("AboutCtrl", AboutCtrl), profile.controller("BreedersCtrl", BreedersCtrl), profile.controller("DogsCtrl", DogsCtrl), profile.controller("ExploreCtrl", ExploreCtrl), profile.controller("AdvertiseCtrl", AdvertiseCtrl), profile.controller("TermsCtrl", TermsCtrl), profile.controller("ContactCtrl", ContactCtrl), profile.controller("LookingForDogCtrl", LookingForDogCtrl), profile.controller("ForBreedersCtrl", ForBreedersCtrl), profile.controller("LoginCtrl", LoginCtrl), profile.controller("RegisterCtrl", RegisterCtrl), profile.controller("user.messagesCtrl", MessagesCtrl), profile.controller("CreateMessageCtrl", CreateMessageCtrl), profile.controller("FollowersCtrl", FollowersCtrl), profile.controller("UserManagementCtrl", UserManagementCtrl), profile.controller("AdminPanelCtrl", AdminPanelCtrl), profile.controller("SubscriptionsCtrl", SubscriptionsCtrl), profile.controller("LookerCtrl", LookerCtrl), profile.controller("LookerAccountCtrl", LookerAccountCtrl), profile.controller("FollowingsCtrl", FollowingsCtrl), profile.controller("UpgradeCtrl", UpgradeCtrl), profile.controller("ManageBreederAccountCtrl", ManageBreederAccountCtrl), profile.controller("BreedsCtrl", BreedsCtrl), profile.controller("PaymentSuccessCtrl", PaymentSuccessCtrl), profile.controller("PaymentCancelCtrl", PaymentCancelCtrl), profile.controller("PaymentSuccessAnnuallyCtrl", PaymentSuccessAnnuallyCtrl), profile.controller("PaymentCancelAnnuallyCtrl", PaymentCancelAnnuallyCtrl), profile.service("DataService", DataService), profile.value("toastr", toastr), profile.value("settings", {deleteConfirm: "Delete forever?", freeSubscriptionNotice: "Your free subscription plan is activated.", monthlySubscriptionNotice: "Your monthly subscription plan is activated.", annualSubscriptionNotice: "Your annual subscription plan is activated.", delSubscriptionNotice: "Your subscription plan was successfully deactivated.", mainUrl: "https://torid-fire-6526.firebaseio.com/", messageSuccessNotice: "Message has been sent", noGalleryNotice: "Here is no any gallery yet", noLitterNotice: "Here is no any litter yet", noSuchUser: "The user with such username does not exist", userExists: "This username is already in use. Please try another", noMessages: "You have no new messages", noFollowing: "You are not following anyone", noFollowers: "You have no followers yet", dataSaved: "Successfully saved", dbError: "Db Connection Error!"}), profile.config(["$stateProvider", "$urlRouterProvider", function (e, t) {
    t.otherwise("/"), e.state("user", {"abstract": !0, templateUrl: "../views/profile-side-bar.html"}).state("user.profile", {"abstract": !0, url: "/profile/:uname{asuser:(?:/[^/]+)?}", controller: IndexCtrl, templateUrl: "../views/profile.html"}).state("user.profile.about1", {url: "/about", templateUrl: "../views/profile-about.html"}).state("user.profile.about1.edit", {url: "/edit", templateUrl: "../views/profile-about-edit.html"}).state("user.profile.photos2", {url: "/photos", controller: "PhotosCtrl", templateUrl: "../views/profile-photos.html"}).state("user.profile.photos2.galleries", {url: "/gallery/:id", template: "<div ui-view><photo-gallery></photo-gallery></div>"}).state("user.profile.photos2.galleries.edit", {url: "/edit", template: "<photo-gallery-edit></photo-gallery-edit>"}).state("user.profile.puppies3", {url: "/puppies", controller: "PuppiesCtrl", templateUrl: "../views/profile-puppies.html"}).state("user.profile.puppies3.litter", {url: "/litter/:id", template: "<sv-litter></sv-litter>"}).state("user.profile.puppies3.litter.edit", {url: "/edit", template: "<sv-litter-edit></sv-litter-edit>"}).state("user.profile.details4", {url: "/details", templateUrl: "../views/profile-details.html"}).state("user.profile.details4.edit", {url: "/edit", templateUrl: "../views/profile-detailsEdit.html"}).state("user.profile.testimonials5", {url: "/testimonials", controller: "TestimonialsCtrl", templateUrl: "../views/profile-testimonials.html"}).state("user.profile.testimonials5.edit", {url: "/edit/:id", template: "<feedback-edit is-owner='home.isOwner' ></feedback-edit>"}).state("generate", {url: "/generate", controller: "GenerateCtrl", templateUrl: "../views/generate.html"}).state("home", {url: "/", templateUrl: "../views/home.html"}).state("sniff.login", {url: "/login", controller: "LoginCtrl", templateUrl: "../views/login.html"}).state("sniff.register", {url: "/register", controller: "RegisterCtrl", templateUrl: "../views/register.html"}).state("looking-for-dog", {url: "/looking-for-a-dog", controller: "LookingForDogCtrl", templateUrl: "../views/looking-for-dog.html"}).state("sniff", {"abstract": !0, templateUrl: "../views/sniff.html"}).state("sniff.about", {url: "/about", controller: "AboutCtrl", templateUrl: "../views/about.html"}).state("sniff.breeders", {url: "/breeders/:breed/:location", controller: "BreedersCtrl", templateUrl: "../views/breeders.html"}).state("sniff.dogs", {url: "/dogs", controller: "DogsCtrl", templateUrl: "../views/dogs.html"}).state("sniff.explore", {url: "/explore", controller: "ExploreCtrl", templateUrl: "../views/explore.html"}).state("sniff.advertise", {url: "/advertise", controller: "AdvertiseCtrl", templateUrl: "../views/advertise.html"}).state("sniff.terms", {url: "/terms", controller: "TermsCtrl", templateUrl: "../views/terms.html"}).state("sniff.contact", {url: "/contact", controller: "ContactCtrl", templateUrl: "../views/contact.html"}).state("sniff.forBreeders", {url: "/for-breeders/:scroll", controller: "ForBreedersCtrl", templateUrl: "../views/for-breeders.html"}).state("user.profile.messages", {url: "/messages", controller: "MessagesCtrl", templateUrl: "../views/messages.html"}).state("user.profile.messages.create", {url: "/create-message", controller: "CreateMessageCtrl", templateUrl: "../views/createMessage.html"}).state("user.profile.messages.trash", {url: "/trash", templateUrl: "../views/messages-trash.html"}).state("user.profile.followings", {url: "/followings", controller: "FollowingsCtrl", templateUrl: "../views/followings.html"}).state("user.profile.followers", {url: "/followers", controller: "FollowersCtrl", templateUrl: "../views/followers.html"}).state("sniff.forBreeders({scroll:1}))", {url: "/upgrade", controller: "UpgradeCtrl", templateUrl: "../views/upgrade.html"}).state("user.profile.manage", {url: "/manage-breeder-account", controller: "ManageBreederAccountCtrl", templateUrl: "../views/manage-breeder-account.html"}).state("admin", {"abstract": !0, controller: "AdminPanelCtrl", templateUrl: "../views/adminPanel.html"}).state("admin.management", {url: "/user-management", controller: "UserManagementCtrl", templateUrl: "../views/userManagement.html"}).state("admin.subscriptions", {url: "/subscriptions", controller: "SubscriptionsCtrl", templateUrl: "../views/subscriptions.html"}).state("admin.breeds", {url: "/breeds", controller: "BreedsCtrl", templateUrl: "../views/breeds.html"}).state("looker", {"abstract": !0, controller: "LookerCtrl", url: "/:uname", templateUrl: "../views/looker.html"}).state("looker.account", {url: "/account", templateUrl: "../views/looker-account.html"}).state("looker.account.edit", {url: "/edit", templateUrl: "../views/looker-account-edit.html"}).state("looker.followings", {url: "/followings", controller: "FollowingsCtrl", templateUrl: "../views/followings.html"}).state("looker.messages", {url: "/messages", controller: "MessagesCtrl", templateUrl: "../views/messages.html"}).state("looker.messages.create", {url: "/create-message", controller: "CreateMessageCtrl", templateUrl: "../views/createMessage.html"}).state("looker.messages.trash", {url: "/trash", templateUrl: "../views/messages-trash.html"}).state("payment-success", {url: "/payment-success", controller: "PaymentSuccessCtrl", templateUrl: "../views/payment-success.html"}).state("payment-cancel", {url: "/payment-cancel", controller: "PaymentCancelCtrl", templateUrl: "../views/payment-cancel.html"}).state("payment-success-annually", {url: "/payment-success-annually", controller: "PaymentSuccessAnnuallyCtrl", templateUrl: "../views/payment-success-annually.html"}).state("payment-cancel-annually", {url: "/payment-cancel-annually", controller: "PaymentCancelAnnuallyCtrl", templateUrl: "../views/payment-cancel-annually.html"})
}])
